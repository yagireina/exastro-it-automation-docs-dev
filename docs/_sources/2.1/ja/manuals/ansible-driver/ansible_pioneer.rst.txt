=========================
Ansible-Pioneer
=========================

はじめに
========

| 本書では、ITAの機能および操作方法について説明します。

Ansible driver概要
==================

.. include:: ../../include/ansible_option_ansible-driver_overview.rst

| Ansible driverには用途に応じて以下3つのモードを用意しています。本書ではそのうちPioneer モードについて説明します。

#. | **Legacy モード**
   | Ansible標準の機能を用いて各種ホストへ設定を投入します。
   | 構築コードを単体YAMLファイルとして登録し、作業パターンをその組み合わせで構成します。
   | OS,NWの環境設定などの作業用に使われることを想定します。
   
#. | **Legacy Role モード**
   | Legacyモードと同じく、Ansible標準の機能を用いて各種ホストへ設定を投入します。
   | 構築コードをパッケージとして登録し、作業パターンをRoleの組み合わせで構成します。
   | 製品部門などが提供するRoleパッケージを用いて、製品のインストール、環境構築などを行う際に使われることを想定します。

#. | **Pioneer モード**
   | Ansibleに独自モジュールを追加し、対話形式による設定投入を可能とします。
   | サーバ、ストレージ、ネットワークを問わず、Telnet, SSH でログイン可能なあらゆる機器に対応しています。対象機器と直接やり取りが必要となるため、相応のＩＴスキルが必要となります。


| また、Ansible driverは、Playbook中の変数を画面から設定することができます。詳細は本書「 :ref:`ansible_legacyrole_variable_handling_in_ansible_driver` 」を参照してください。

.. _ansible_pioneer_variable_handling_in_ansible_driver:

Ansible driverでの変数取り扱い
==============================

変数の種類
----------

| Ansible driverでは、Playbook中の変数の具体値をITAの設定画面から設定することができます。
| **※設定方法の詳細は、本書「** :ref:`ansible_pioneer_substitution_value_auto_registration_setting` **」を参照してください。**
| Playbook中の変数で、ITAの変数として扱える変数は以下の6種類があります。


通常変数
--------

.. include:: ../../include/ansible_option_normal-variable.rst


複数具体値変数
--------------

.. include:: ../../include/ansible_option_multiple-specific-value-variable.rst


グローバル変数
--------------

.. include:: ../../include/ansible_option_global-variable.rst


テンプレート埋込変数
--------------------

.. include:: ../../include/ansible_option_template-embedded-variable.rst


ファイル埋込変数
----------------

.. include:: ../../include/ansible_option_fle-embedded-varaible.rst

ITA独自変数
-----------

.. include:: ../../include/ansible_option_ita-original-variable.rst


変数の抜出および具体値登録
--------------------------

| 各モードとも、ITAにアップロードしたPlaybook等の資材から変数を抜出し、各メニューから具体値を登録できます。各メニューから登録した変数の具体値は、作業実行時にホスト変数ファイルに出力されます。
| 変数の抜出方法は以下のとおりです。

| **Ansible-Pioneer**
| 「対話ファイル素材 (本書： :ref:`ansible_pioneer_dialog_files_ansible_pioneer_only` )」でアップロードした対話ファイルより、以下の書式の変数定義を抜出します。


.. table::  変数の抜出および具体値登録
   :widths: 4 8 16
   :align: left

   +-------------------------------+--------------------------------------+------------------------------------------------------------------------------------------+
   | 変数名                        | 書式                                 | 具体値の設定                                                                             |
   |                               |                                      |                                                                                          |
   +===============================+======================================+==========================================================================================+
   | 通常変数                      | .. code-block:: yaml                 | 具体値の登録は「 :ref:`ansible_pioneer_substitution_value_auto_registration_setting` 」\ |
   |                               |                                      | や「 :ref:`ansible_pioneer_substitution_value_list` 」メニューより行います。             |
   | 複数具体値変数                |    {{ VAR_xxx }}                     |                                                                                          |
   |                               |                                      | 具体値の登録の仕方で通常変数か複数具体値変数かを決定します。                             |
   |                               |                                      |                                                                                          |
   +-------------------------------+--------------------------------------+------------------------------------------------------------------------------------------+
   | グローバル変数                | .. code-block:: yaml                 | 具体値の登録は「 :ref:`ansible_pioneer_global_variable_list` 」メニューより行います。    |
   |                               |                                      |                                                                                          |
   |                               |    {{ GBL_xxx }}                     |                                                                                          |
   |                               |                                      |                                                                                          |
   |                               |                                      |                                                                                          |
   +-------------------------------+--------------------------------------+------------------------------------------------------------------------------------------+
   | テンプレート埋込変数          | .. code-block:: yaml                 | 具体値の登録は「 :ref:`ansible_pioneer_template_list` 」メニューより行います。           |
   |                               |                                      |                                                                                          |
   |                               |    {{ TPF_xxx }}                     |                                                                                          |
   |                               |                                      |                                                                                          |
   |                               |                                      |                                                                                          |
   +-------------------------------+--------------------------------------+------------------------------------------------------------------------------------------+
   | ファイル埋込変数              | .. code-block:: yaml                 | 具体値の登録は「 :ref:`ansible_pioneer_file_list` 」メニューより行います。               |
   |                               |                                      |                                                                                          |
   |                               |    {{ CPF_xxx }}                     |                                                                                          |
   |                               |                                      |                                                                                          |
   |                               |                                      |                                                                                          |
   +-------------------------------+--------------------------------------+------------------------------------------------------------------------------------------+



代入値登録による変数の扱い
--------------------------

| Playbookで定義した変数の値は代入値登録機能により上書きすることができます。
| Playbook中の変数と、代入値管理機能で登録した変数の値の関係を、以下の図に示します。

.. image:: /images/ja/diagram/hensu.png
   :width: 6.68819in
   :height: 3.35972in

| 代入値管理機能で登録した変数の値は、各ホスト用に変数定義ファイル(host_vars)に出力され、Ansibleで元のPlaybookと変数定義用ファイルを入力として各ホストに実行されます。
| この結果、変数の値の優先順位は以下のようになります。

#. | 代入値管理機能で登録した値
#. | Playbook中の変数に指定した値
   | 詳細は 「 :ref:`ansible_pioneer_substitution_value_list` 」を参照してください。


Ansible driver コンソールメニュー構成
=====================================

| 本章では、ITAコンソールのメニュー構成について説明します。

メニュー/画面一覧
-----------------

1. | **基本コンソールのメニュー**

.. include:: ../../include/ansible_option_basic-console-menu.rst

|

2. | **Ansible共通コンソールのメニュー**

.. include:: ../../include/ansible_option_ansible-common-console-menu.rst

|

3. | **Ansible-Pioneerコンソールのメニュー**

| Ansible-Pioneerコンソールに対応するメニュー一覧を以下に記述します。

.. list-table::  Ansible-Pioneerコンソール メニュー/画面一覧
   :widths: 20 30 80
   :header-rows: 1
   :align: left

   * - No
     - メニュー・画面
     - 説明 
   * - 1
     - Movement一覧
     - Movementの一覧を管理します。
   * - 2
     - 対話種別リスト
     - 同一目的の対話ファイルを対話種別としてまとめる種別を管理します。
   * - 3
     - OS種別マスタ
     - Pioneerより捜査対象となる機器のOS種別を管理します。
   * - 4
     - 対話ファイル素材集
     - 対話種別に紐づけるOS種別とITAシステム独自フォーマットの作業手順ファイル(移行、対話ファイルと称す。)を管理します。
   * - 5
     - Movement-対話種別紐付
     - {{#4
   * - 6
     - Movement-変数紐付 (※1)
     - Movementで使用している変数を管理します。
   * - 7
     - 代入値自動登録設定 
     - CMDBのメニューに登録されているオぺレーションとホスト毎の項目値を紐付けるMovementと変数を管理します。
   * - 8
     - 作業実行
     - 作業実行するMovementとオペレーションを選択し実行を指示します。
   * - 9
     - 作業管理  
     - 作業実行履歴を管理します。   
   * - 10
     - 作業状態確認 
     - 作業実行状態を表示します。 
   * - 11
     - 作業対象ホスト 
     - Movementで使用するホストを管理します。
   * - 12
     - 代入値管理
     - 変数の代入値を管理します。  


.. note:: | ※1 非表示メニューは、バックヤード機能でデータの登録・更新を行うメニューです。
   | Ansible Driver機能をインストールした状態では表示されないメニューに設定されています。
   | 非表示メニューを表示するには、:menuselection:`管理コンソール-->ロール・メニュー紐付管理` で各メニューの復活処理を行います。詳細は :doc:`../it_automation_base/management_console` を参照してください。


Ansible driver利用手順
======================

| Ansibleコンソールの利用手順について説明します。

Ansible-Pioneer作業フロー
~~~~~~~~~~~~~~~~~~~~~~~~~

| 以下は、Ansible-Pioneerで作業を実行するまでの流れです。

-  **作業フロー詳細と参照先**

   #. | **OS種別の登録**
      | Pioneerより操作対象となる機器のOS種別を設定します。

   #. | **機器情報にAnsible利用情報を設定** 
      | ITA基本コンソールの機器一覧の画面から、各機器に対してAnsible利用情報を設定します。
      | 詳細は :ref:`ansible_pioneer_device_list` を参照してください。

   #. | **投入オペレーション名の登録**
      | ITA基本コンソールのオペレーション一覧の画面から、作業用の投入オペレーション名を登録します。
      | 詳細は :ref:`ansible_pioneer_input_operation_list` を参照してください。

   #. | **インターフェース情報の登録**
      | Ansible共通コンソールのインターフェース情報の画面から、Ansible Core、Ansible Automation Controllerサーバのどちらを実行エンジンにするかを選択し、実行エンジンのサーバへの接続情報の登録します。
      | 詳細は :ref:`ansible_pioneer_interface_information` を参照してください。

   #. | **作業パターン(Movement)の登録**
      | Ansible-PioneerコンソールのMovement一覧の画面から、作業用のMovementを登録します。
      | 詳細は :ref:`ansible_pioneer_movement_list` を参照してください。

   #. | **対話種別の登録**
      | Ansible-Pioneerコンソールの対話種別リストの画面から、対話種別を登録します。
      | OS種別ごとの差異を対話ファイルごとに定義し、同一目的の対話ファイルを対話種別として纏めて機器差分を吸収(抽象化)します。
      | 詳細は :ref:`ansible_pioneer_dialog_type_list_ansible_pioneer_only` を参照してください。

   #. | **対話ファイルの登録**
      | Ansible-Pioneerコンソールの対話ファイル素材集の画面から、対話種別とOS種別の組み合わせに対して対話ファイルを登録します。
      | 詳細は :ref:`ansible_pioneer_dialog_files_ansible_pioneer_only` を参照してください。

   #. | **テンプレートファイルの登録(必要に応じて実施)**
      | Ansible共通コンソールのテンプレート管理の画面から、対話ファイルで使用しているtemplateファイルとtemplate埋め込み変数の登録／更新／廃止を行います。
      | 詳細は :ref:`ansible_pioneer_template_list` を参照してください。

   #. | **素材ファイルの登録(必要に応じて実施)**
      | Ansible共通コンソールのファイル管理の画面から、作業対象サーバに配置するファイルを登録します。
      | 詳細は :ref:`ansible_pioneer_file_list` を参照してください。

   #. | **Movementに対話ファイルを指定**
      | Ansible-PioneerコンソールのMovement-Playbook紐付（Movement-対話種別紐付、Movement-ロール紐付）の画面から、登録したMovementに対話ファイルに対応した対話種別リストを指定します。
      | 詳細は :ref:`ansible_pioneer_movement_details` を参照してください。

   #. | **作業対象ホストの指定** 
      | Ansible-Pioneerコンソールの作業対象ホストの画面から、作業対象ホストを指定します。
      | 詳細は :ref:`ansible_pioneer_target_host` を参照してください。

   #. | **変数値の設定** 
      | Ansible-Pioneerコンソールの代入値管理の画面から、Movementに登録したPlaybook内で定義した変数の値を設定します。変数を利用していない場合、設定は不要です。
      | 詳細は :ref:`ansible_pioneer_substitution_value_list` を参照してください。

   #. | **作業実行** 
      | Ansible-Pioneerコンソールの作業実行の画面から、実行日時、投入オペレーションを選択して設定して処理の実行を指示します。
      | 詳細は :ref:`ansible_pioneer_execution` を参照してください。

   #. | **作業状態確認**
      | Ansible-Pioneerコンソールの作業状態確認の画面では、実行した作業の状態がリアルタイムで表示されます。また、作業の緊急停止や、実行ログ、エラーログを監視することができます。
      | 詳細は :ref:`ansible_pioneer_check_operation_status` を参照してください。

   #. | **作業履歴確認** 
      | Ansible-Pioneerコンソールの作業管理の画面では、実行した作業の一覧が表示され履歴が確認できます。
      | 詳細は :ref:`ansible_pioneer_execution_list` を参照してください。


Ansible driver機能・操作方法説明
================================

.. include:: ../../include/ansible_option_legend-of-registration-screen-item-list.rst

基本コンソール
--------------

| 本節では、ITA基本コンソールでの操作について記載します。
| 本作業は :doc:`../it_automation_base/basic_console` を参照して、ITA基本コンソール画面内で作業を実施してください。


オペレーション一覧
~~~~~~~~~~~~~~~~~~

| :menuselection:`基本コンソール-->オペレーション一覧` では、オーケストレータで実行する作業対象ホストに対するオペレーションを管理します。作業はITA基本コンソール内メニューより選択します。
| 登録方法の詳細は、関連マニュアルの :doc:`../it_automation_base/basic_console` を参照してください。

.. figure:: /images/ja/basic_console/operation_list/register.png
   :width: 800px
   :alt: サブメニュー画面（オペレーション一覧）

   サブメニュー画面（オペレーション一覧）


Ansible共通コンソール
---------------------

| 本節では、Ansible共通コンソールでの操作について記載します。


.. _ansible_pioneer_device_list:

機器一覧
~~~~~~~~

#. | :menuselection:`Ansible共通-->機器一覧` では、作業対象ホストの情報のメンテナンス(閲覧/登録/更新/廃止)を行います。

   .. figure:: /images/ja/ansible_common/devaicelist/device_list.png
      :width: 800px
      :alt: サブメニュー画面（機器一覧）

      サブメニュー画面（機器一覧）

#. | :guilabel:`＋ 登録` ボタンより、機器情報の登録を行います。

   .. figure:: /images/ja/ansible_common/devaicelist/registration_device_list.gif
      :width: 800px
      :alt: 登録画面（機器一覧）

      登録画面（機器一覧）


#. | 登録画面の共通項目一覧は以下のとおりです。

   | Ansible driverを利用する場合には、Ansible利用情報を入力してください。
   | 未入力で作業実行した場合、想定外エラーとなる場合があります。

   .. table:: 登録画面項目一覧（機器一覧）
      :widths: 8 8 8 8 18 12 12 12
      :align: left

      +-----------------------------------+-------------------------------------------------+-----------+--------------+-----------------+
      | 項目                              | 説明                                            | 入力必須  | 入力方法     | 制約事項        |
      |                                   |                                                 |           |              |                 |
      +===================================+=================================================+===========+==============+=================+
      | 管理システム項番                  | 登録情報を識別する一意のIDが自動入力されます。  | ー        | 手動入力     | ー              |   
      +-----------------------------------+-------------------------------------------------+-----------+--------------+-----------------+
      | HW機器種別                        | HW機器の種別を選択します。                      | ー        | リスト選択   | ー              |   
      |                                   |                                                 |           |              |                 |     
      |                                   | ・NW(ネットワーク)                              |           |              |                 |     
      |                                   |                                                 |           |              |                 |     
      |                                   | ・ST(ストレージ)                                |           |              |                 |     
      |                                   |                                                 |           |              |                 |     
      |                                   | ・SV(サーバー)                                  |           |              |                 |     
      |                                   |                                                 |           |              |                 |     
      +-----------------------------------+-------------------------------------------------+-----------+--------------+-----------------+
      | ホスト名                          | ホスト名を記入します。                          | ○         | 手動入力     | 最大長255バイト |   
      +-----------------------------------+-------------------------------------------------+-----------+--------------+-----------------+
      | DNSホスト名                       | ＤＮＳサーバーを使用してホスト名が解決できる\   |           | 手動入力     | 最大長255バイト |   
      |                                   | 名称を入力します。                              |           |              |                 |     
      +-----------------------------------+-------------------------------------------------+-----------+--------------+-----------------+
      | IPアドレス                        | IPアドレス(xxx.xxx.xxx.xxx形式)を記入します。   |           | 手動入力     | 最大長15バイト  |               
      +-----------------+-----------------+-------------------------------------------------+-----------+--------------+-----------------+
      | ログイン\       | ユーザ          | ログインユーザを記入します。                    |           | 手動入力     | 最大長255バイト |   
      | パスワード      |                 |                                                 |           |              |                 |         
      |                 +-----------------+-------------------------------------------------+-----------+--------------+-----------------+
      |                 | パスワード      | パスワードを指定します。                        |           | 手動入力     | 最大長255バイト |        
      +-----------------+-----------------+-------------------------------------------------+-----------+--------------+-----------------+
      | ssh\            | ssh秘密鍵\      | ssh秘密鍵ファイルを指定して鍵認証する場合の\    | ー        | ファイル選択 | 最大サイズ\     |   
      | 鍵認証\         | ファイル        | 秘密鍵ファイルを入力します。アップロード\       |           |              | 100Mバイト      |   
      | 情報            |                 | したファイルは暗号化されて保存されます。        |           |              |                 |   
      |                 |                 |                                                 |           |              |                 |   
      |                 |                 | ※登録後はダウンロード不可となります。           |           |              |                 |       
      |                 +-----------------+-------------------------------------------------+-----------+--------------+-----------------+
      |                 | パスフレーズ    | ssh秘密鍵ファイルにパスフレーズが設定され\      | ー        | 手動入力     | 最大長255バイト |   
      |                 |                 | ている場合、パスフレーズを入力します。          |           |              |                 |        
      +--------+--------+-----------------+-------------------------------------------------+-----------+--------------+-----------------+
      | Ansib\ | Legacy\| 認証方式        | Ansible・Ansible Automation Controller から\    |           | リスト選択   | 説明欄記載\     |   
      | le利用\| /Role\ |                 | 機器へ接続する際の認証方式を選択します。        |           |              | のとおり        |   
      | 情報   | 利用\  |                 |                                                 |           |              |                 |   
      |        | 情報   |                 | ●パスワード認証                                 |           |              |                 |     
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ログインパスワードの管理で●の選択と、\          |           |              |                 |   
      |        |        |                 | ログインパスワードの入力が必須です。            |           |              |                 |     
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ●鍵認証（パスフレーズなし）                     |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ssh秘密鍵ファイル(id_ras\                       |           |              |                 |   
      |        |        |                 | )のアップロードが必須です。                     |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ●鍵認証（パスフレーズあり）                     |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ssh秘密鍵ファイル(id_ras)のアップロードと、\    |           |              |                 |   
      |        |        |                 | パスフレーズの入力が必須です。                  |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ●鍵認証（鍵交換済み）※1                         |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ssh秘密鍵ファイル(id_ras)の\                    |           |              |                 |   
      |        |        |                 | アップロードは必要ありません。                  |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ●パスワード認証（winrm)                         |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | 必要に応じてWinRM接続情報を入力します。         |           |              |                 |     
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | 尚、パスワード認証（winrm)以外の認証方式の\     |           |              |                 |   
      |        |        |                 | 場合、機器側に以下の設定が必要です。            |           |              |                 |      
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ログインユーザの sudo権限を NOPASSWD付で \      |           |              |                 |   
      |        |        |                 | :file:`/etc/sudoers` に設定します。             |           |              |                 |      
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | Exp)                                            |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |
      |        |        |                 | .. code-block::                                 |           |              |                 |
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 |    Demo_user ALL=(ALL) NOPASSWD:ALL             |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        +--------+--------+-------------------------------------------------+-----------+--------------+-----------------+
      |        |        | WinRM\ | ポート\| WindowsServerにWinRM接続する際\                 | ー        | 手動入力     | 説明欄記載\     |   
      |        |        | 接続\  | 番号   | のポート番号を入力します。                      |           |              | のとおり        |   
      |        |        | 情報   |        |                                                 |           |              |                 |   
      |        |        |        |        | 未入力の場合はデフォルト(5985)での\             |           |              |                 |    
      |        |        |        |        | WinRM接続となります。                           |           |              |                 |     
      |        |        |        +--------+-------------------------------------------------+-----------+--------------+-----------------+
      |        |        |        | サーバ\| WinRM接続ポートでhttpsのポート番号を指定した\   | ー        | ファイル選択 | 最大サイズ\     |   
      |        |        |        | 証明書 | 場合にサーバﾞ証明書を入力します。               |           |              | 100Mバイト      |   
      |        |        |        |        |                                                 |           |              |                 |    
      |        |        |        |        | アップロードしたファイルは暗号化されて保存\     |           |              |                 |   
      |        |        |        |        | されます。                                      |           |              |                 |
      |        |        |        |        |                                                 |           |              |                 |
      |        |        |        |        | ※登録後はダウンロード不可となります。           |           |              |                 |    
      |        |        |        |        |                                                 |           |              |                 |   
      |        |        |        |        | サーバ証明書の認証を省く場合、インベントリ\     |           |              |                 |   
      |        |        |        |        | ファイル追加オプションに下記を追記してください。|           |              |                 |      
      |        |        |        |        |                                                 |           |              |                 | 
      |        |        |        |        | .. code-block:: yaml                            |           |              |                 |
      |        |        |        |        |                                                 |           |              |                 |  
      |        |        |        |        |    ansible_winrm_server_cert_validation: ignore |           |              |                 |   
      |        |        |        |        |                                                 |           |              |                 |    
      |        +--------+--------+--------+-------------------------------------------------+-----------+--------------+-----------------+
      |        | 接続オプション           | （ssh接続の場合）                               | ー        | 手動入力     | 最大長4000バイト|   
      |        |                          |                                                 |           |              |                 |   
      |        |                          | :file:`/etc/ansible.cfg/ssh_args` に設定して\   |           |              |                 |   
      |        |                          | いるsshオプション以外のオプションを設定\        |           |              |                 |     
      |        |                          | したい場合、設定したいオプションを入力します。  |           |              |                 |     
      |        |                          |                                                 |           |              |                 |   
      |        |                          | （telnet接続の場合）                            |           |              |                 |   
      |        |                          |                                                 |           |              |                 |     
      |        |                          | telnet接続時のオプションを設定したい場合、\     |           |              |                 |   
      |        |                          | 設定したいオプションを入力します。              |           |              |                 |     
      |        +--------------------------+-------------------------------------------------+-----------+--------------+-----------------+
      |        | インベントリファイル\    | ITAが設定していないインベントリファイルの\      | ー        | 手動入力     | 最大長4000バイト|   
      |        | 追加オプション           | オプションパラメータをyaml形式で入力します。    |           |              |                 |  
      |        |                          |                                                 |           |              |                 |   
      |        |                          | Exp)                                            |           |              |                 |   
      |        |                          |                                                 |           |              |                 |
      |        |                          | .. code-block:: yaml                            |           |              |                 |
      |        |                          |                                                 |           |              |                 |   
      |        |                          |    ansible_connection: network_cli              |           |              |                 |   
      |        |                          |    ansible_network_os: ios                      |           |              |                 |   
      |        |                          |    ansible_become: yes                          |           |              |                 |   
      |        |                          |    ansible_become_method: enable                |           |              |                 |   
      |        |                          |                                                 |           |              |                 |      
      |        |                          | 各パラメータ値を変数で記述することも出来ます。  |           |              |                 |   
      |        |                          |                                                 |           |              |                 | 
      |        |                          | .. code-block:: yaml                            |           |              |                 |
      |        |                          |                                                 |           |              |                 |  
      |        |                          |    ansible_become_password: '{{ VAR_passwd }}'  |           |              |                 |   
      |        |                          |                                                 |           |              |                 |     
      |        |                          | 具体値に変数を記述する場合                      |           |              |                 |   
      |        |                          |                                                 |           |              |                 |   
      |        |                          | '{{ VAR_passwd }}'                              |           |              |                 |   
      |        |                          |                                                 |           |              |                 |          
      |        |                          | ':シングル・ダブルコーテーションで囲む「必須」  |           |              |                 |     
      |        |                          |                                                 |           |              |                 |   
      |        |                          | 変数の具体値は「 :ref:`ansible_pioneer\         |           |              |                 |   
      |        |                          | _substitution_value_auto_registration\          |           |              |                 | 
      |        |                          | _setting` 」や「 :ref:`ansible_pioneer\         |           |              |                 |  
      |        |                          | _substitution_value_list` 」\                   |           |              |                 |   
      |        |                          | メニューから登録します。                        |           |              |                 |     
      |        +--------+-----------------+-------------------------------------------------+-----------+--------------+-----------------+
      |        | Ansi\  | インスタンス\   | Ansible Automation Controller がクラスタ構成の\ | ー        | リスト選択   | ー              |   
      |        | ble \  | グループ名※2    | 場合、どのインスタンスグループで実行するかを選\ |           |              |                 |   
      |        | Autom\ |                 | 択します。ここで設定した、インスタンスグループ\ |           |              |                 |   
      |        | ation \|                 | はインベントリオブジェクトに設定されます。      |           |              |                 |   
      |        | Contr\ |                 |                                                 |           |              |                 |   
      |        | oller \|                 | 未選択の場合はAnsible Automation Controller の\ |           |              |                 |   
      |        | 利用\  |                 | デフォルトのインスタンスグループになります。    |           |              |                 |   
      |        | 情報   |                 |                                                 |           |              |                 |   
      |        |        |                 | Ansible Automation Controller がクラスタ構成\   |           |              |                 |   
      |        |        |                 | でない場合は、未選択で構いません。              |           |              |                 |     
      |        |        +-----------------+-------------------------------------------------+-----------+--------------+-----------------+
      |        |        | 接続タイプ      | Ansible Automation Controller認証情報の接続\    | ○         | リスト選択   |                 |   
      |        |        |                 | タイプを設定します。通常はmachineを選択します。\|           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | ansible_connectionをlocalに設定する必要がある\  |           |              |                 |   
      |        |        |                 | Network OSの場合にNetworkを選択します。         |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | Networkを選択した場合、インベントリファイル追加\|           |              |                 |   
      |        |        |                 | オプションにPlatform Options(ansible_connection\|           |              |                 |   
      |        |        |                 | 以外)を設定する必要があります。                 |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | Exp)                                            |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | インベントリファイル追加オプションの設定例      |           |              |                 |      
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | Network OSがiosの場合の設定値                   |           |              |                 |      
      |        |        |                 |                                                 |           |              |                 | 
      |        |        |                 | .. code-block:: yaml                            |           |              |                 |
      |        |        |                 |                                                 |           |              |                 |  
      |        |        |                 |    ansible_network_os: ios                      |           |              |                 |   
      |        |        |                 |    ansible_become: yes                          |           |              |                 |   
      |        |        |                 |    ansible_become_method: enable                |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |     
      |        |        |                 | Ansible Automation Controllerの認証情報の接続\  |           |              |                 |   
      |        |        |                 | タイプについては、ドキュメント `認証情報タイ    |           |              |                 |   
      |        |        |                 | プ <https://docs.ansible.com/ansible-tower/3.   |           |              |                 |    
      |        |        |                 | 6.4/html_ja/userguide/credentials.html>`__ \    |           |              |                 |      
      |        |        |                 | を参照してください。                            |           |              |                 |   
      |        |        |                 |                                                 |           |              |                 |   
      |        |        |                 | Network OSとansible_connectionの関連やPlat\     |           |              |                 |      
      |        |        |                 | form Optionsについては、Ansibleドキュメント \   |           |              |                 |   
      |        |        |                 | `Platform Options <https://docs.ansible.com/    |           |              |                 |     
      |        |        |                 | ansible/devel/network/user_guide/platform_inde  |           |              |                 |     
      |        |        |                 | x.html>`__ \ を参照してください。               |           |              |                 |      
      +--------+--------+-----------------+-------------------------------------------------+-----------+--------------+-----------------+
      | 備考                              | 自由記述欄です。                                | ー        | 手動入力     | 最大長4000バイト|     
      +-----------------------------------+-------------------------------------------------+-----------+--------------+-----------------+

   
 
   .. note:: | ※1 認証方式が鍵認証（鍵交換済み）に設定する為に必要な公開鍵ファイルの配布
   
      - | Ansible Coreの場合
        | ansibleがインストールされているサーバーの実行ユーザー「Ansible共通コンソール=>インターフェース情報に設定されている実行ユーザー」から作業対象ホストにssh接続します。
        | 実行ユーザーの公開鍵ファイルをログイン先ユーザーのauthorized_keysにコピーしてください。
   
      - | Ansible Automation Controllerの場合
        | Ansible Automation Controllerのawxユーザーから作業対象ホストにssh接続しています。
        | awxユーザーの公開鍵ファイルをログイン先ユーザーのauthorized_keysにコピーしてください。ブラウザよりAnsible Automation Controllerにログインし、「設定」→「ジョブ」→「分離されたジョブに公開するパス」に :file:`/var/lib/awx/.ssh/` を設定します。
      
        .. image:: /images/ja/diagram/ansible_automationcontroller.png
           :width: 4.97986in
           :height: 1.51304in
           :align: center
         
        | 尚、AnsibleTower4.x以降、awxユーザーの.sshディレクトリが扱えない為、作業対象ホストと鍵認証（鍵交換済み）での接続は出来ません。

   .. note:: | ※2 Ansible driverのバックヤード機能 「Ansible Automation Controllerデータ同期」により取得したデータから選択します。


.. _ansible_pioneer_interface_information:

インターフェース情報
~~~~~~~~~~~~~~~~~~~~

#. | :menuselection:`Ansible共通-->インターフェース情報` では、Ansible Core、AnsibleTower、Ansible Automation Controllerのいずれかを実行エンジンに選択し、ITAシステム・Ansible driverサーバと実行エンジンのサーバが共有するディレクトリのパスのおよび実行エンジンのサーバへの接続インターフェース情報のメンテナンス(閲覧/更新)を行います。

   .. figure:: /images/ja/ansible_common/Interface_information/interface_information.png
      :width: 800px
      :alt: サブメニュー画面（インタフェース情報）

      サブメニュー画面（インタフェース情報）

#. | :guilabel:`編集` ボタンより、インターフェース情報の登録を行います。

   .. figure:: /images/ja/ansible_common/Interface_information/registration_interface_information.gif
      :width: 800px
      :alt: 登録画面（インタフェース情報）

      登録画面（インタフェース情報）

#. | インタフェース情報画面の項目一覧は以下のとおりです。
   | インタフェース情報が未登録または、複数レコード登録されている状態で作業実行した場合、作業実行は想定外エラーとなります。

   .. table:: 登録画面項目一覧（インタフェース情報）
      :widths: 8 8 8 24 8 8 10
      :align: left

      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+
      | 項目                              | 説明                         | 入力必須  | 入力方法     | 制約事項        |
      |                                   |                              |           |              |                 |
      +=================+========+========+==============================+===========+==============+=================+
      | 実行エンジン                      | 実行するエンジンを\          | ○         | リスト選択   |                 |
      |                                   | 下記の2種類から選択します。  |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | ・Ansible Core               |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | ・Ansible Automation \       |           |              |                 |
      |                                   | Controller                   |           |              |                 |
      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+
      | Ansible \       | 代表ホスト      | Ansible Automation \         | ー        | リスト選択   | 実行エンジ\     |
      | Automation \    |                 | Controllerホスト一覧に\      |           |              | ンがAnsible \   |
      | Controller \    |                 | 登録されているホストの一覧\  |           |              | Cor\            |
      | インターフェース|                 | より、ITAと通信するAnsible \ |           |              | e以外の場合\    |
      |                 |                 | Automation \                 |           |              | に入力必須      |
      |                 |                 | Controllerを選択します。     |           |              |                 |
      |                 |                 |                              |           |              |                 |
      |                 +--------+--------+------------------------------+-----------+--------------+-----------------+
      |                 | プロトコル      | Ansible Automation \         | ー        | 手動入力     | 実行エンジ\     |
      |                 |                 | Contr\                       |           |              | ンがAnsible \   |
      |                 |                 | ollerサーバとのプロトコルを \|           |              | Cor\            |
      |                 |                 | http / \                     |           |              | e以外の場合\    |
      |                 |                 | https \                      |           |              | に入力必須      |
      |                 |                 | のどちらかを入力します。     |           |              |                 |
      |                 |                 |                              |           |              |                 |
      |                 +--------+--------+------------------------------+-----------+--------------+-----------------+
      |                 | ポート          | Ansible Automation \         | ー        | 手動入力     | 実行エンジ\     |
      |                 |                 | Controllerサーバの接\        |           |              | ンがAnsible \   |
      |                 |                 | 続ポート(80/443)を入力しま\  |           |              | Cor\            |
      |                 |                 | す。通常はHTTPS(443)です。   |           |              | e以外の場合\    |
      |                 |                 |                              |           |              | に入力必須      |
      |                 +--------+--------+------------------------------+-----------+--------------+-----------------+
      |                 | 組織名          | Ansible Automation \         | ー        | リスト選択   |                 |
      |                 |                 | Controllerサーバに登録され\  |           |              |                 |
      |                 |                 | ている組織名を選択します。   |           |              |                 |
      |                 |                 |                              |           |              |                 |
      |                 +--------+--------+------------------------------+-----------+--------------+-----------------+
      |                 | 認証トークン    | ITAからAnsible Automation \  | ー        | 手動入力     | 最大\           |
      |                 |                 | Controlle\                   |           |              | 長255バイト     |
      |                 |                 | rサーバに接続するユーザーの\ |           |              |                 |
      |                 |                 | 認証トークンを入力します。   |           |              | 実行エンジ\     |
      |                 |                 |                              |           |              | ンがAnsible \   |
      |                 |                 |                              |           |              | Cor\            |
      |                 |                 |                              |           |              | e以外の場合\    |
      |                 |                 |                              |           |              | に入力必須      |
      |                 +--------+--------+------------------------------+-----------+--------------+-----------------+
      |                 | 実行時データ削除| 作業実行時にITAとAnsible \   | ー        | リスト選択   | 実行エンジ\     |
      |                 |                 | Automation Controller \      |           |              | ンがAnsible \   |
      |                 |                 | 内に一時的に生成した\        |           |              | Cor\            |
      |                 |                 | データリソースを作業終了後\  |           |              | e以外の場合\    |
      |                 |                 | に削除するかを選択します。   |           |              | に入力必須      |
      |                 |                 | 「削\                        |           |              |                 |
      |                 |                 | 除する」を選択した場合に削\  |           |              |                 |
      |                 |                 | 除されるデータリソースは「 \ |           |              |                 |
      |                 |                 | :ref:`ansible_pioneer\       |           |              |                 |
      |                 |                 | _data_resources_deleted\     |           |              |                 |
      |                 |                 | _when_executing` \           |           |              |                 |
      |                 |                 | 」を参照してください。       |           |              |                 |
      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+
      | Proxy           | Address         | プロキシサー\                | ー        | 手動入力     | 最\             |
      |                 |                 | バのアドレスを入力します。   |           |              | 大255バイト     |
      |                 |                 |                              |           |              |                 |
      |                 |                 | ITAがプロキシ\               |           |              |                 |
      |                 |                 | 環境下にある場合、Ansible/\  |           |              |                 |
      |                 |                 | Ansible Automation \         |           |              |                 |
      |                 |                 | Controlle\                   |           |              |                 |
      |                 |                 | rサーバまでの疎通のために設\ |           |              |                 |
      |                 |                 | 定が必要な場合があります。   |           |              |                 |
      |                 |                 |                              |           |              |                 |
      |                 |                 | プロキシサーバのURLが\       |           |              |                 |
      |                 |                 |                              |           |              |                 |
      |                 |                 | \http://\                    |           |              |                 |
      |                 |                 | procy.gate.co.jp:8080の場合\ |           |              |                 |
      |                 |                 |                              |           |              |                 |
      |                 |                 | Address\                     |           |              |                 |
      |                 |                 | にはhttp://procy.gate.co.jp\ |           |              |                 |
      |                 |                 | を入力します。               |           |              |                 |
      |                 |                 |                              |           |              |                 |
      |                 |                 | Portには 8080を入力します。  |           |              |                 |
      |                 +--------+--------+------------------------------+-----------+--------------+-----------------+
      |                 | Port            | プロキシサ\                  | ー        | 手動入力     |                 |
      |                 |                 | ーバのポートを入力します。   |           |              |                 |
      |                 |                 |                              |           |              |                 |
      |                 |                 | ITAがプロキシ\               |           |              |                 |
      |                 |                 | 環境下にある場合、Ansible/\  |           |              |                 |
      |                 |                 | Ansible Automation \         |           |              |                 |
      |                 |                 | Controlle\                   |           |              |                 |
      |                 |                 | rサーバまでの疎通のために設\ |           |              |                 |
      |                 |                 | 定が必要な場合があります。   |           |              |                 |
      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+
      | Ansible-vaultパスワード           | ansible-vaultコマンドで変数\ | ー        | 手動入力     | 最大\           |
      |                                   | の具体値を暗号化する場合の\  |           |              | 長64バイト      |
      |                                   | パスワードを入力します。     |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | 空白の場合は、デフォルト値\  |           |              |                 |
      |                                   | が使用します。               |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   |                              |           |              |                 |
      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+
      | オプションパラメータ              | Movement共通のオプショ\      | ー        | 手動入力     | 最大\           |
      |                                   | ンパラメータを入力します。   |           |              | 長4000バイト    |
      |                                   |                              |           |              |                 |
      |                                   | 実行エンジンがAnsible \      |           |              |                 |
      |                                   | Coreの場合はansible-playboo\ |           |              |                 |
      |                                   | kコマンドのオプションパラメ\ |           |              |                 |
      |                                   | ータ、実行エンジンが\        |           |              |                 |
      |                                   | Ansible Core以外\            |           |              |                 |
      |                                   | の場合はジョブテンプレート\  |           |              |                 |
      |                                   | のパラメータを入力します。   |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | Movement固\                  |           |              |                 |
      |                                   | 有のオプションパラメータは\  |           |              |                 |
      |                                   | Movement一覧で入力します。   |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | オプションパ\                |           |              |                 |
      |                                   | ラメータの詳細については、\  |           |              |                 |
      |                                   | 「 :ref:`ansible_pioneer\    |           |              |                 |
      |                                   | _option_parameter_list` 」\  |           |              |                 |
      |                                   | を参照してください。         |           |              |                 |
      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+
      | NULL連携                          | 代入値自動登録\              | ○         | リスト選択   | ー              |
      |                                   | 設定でパラメータシートの具\  |           |              |                 |
      |                                   | 体値がNULL(空白)の場合に、\  |           |              |                 |
      |                                   | 代入値管理への登録をNULL(空\ |           |              |                 |
      |                                   | 白)の値で行うか設定します。  |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | 代入値自動登録設定メニ\      |           |              |                 |
      |                                   | ューの「NULL連携」が空白の\  |           |              |                 |
      |                                   | 場合この値が適用されます。   |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | ・「有効」\                  |           |              |                 |
      |                                   | の場合、パラメータシートの\  |           |              |                 |
      |                                   | 値がどのような値でも代入値\  |           |              |                 |
      |                                   | 管理への登録が行われます。   |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | ・「無効」の\                |           |              |                 |
      |                                   | 場合、パラメータシートに値\  |           |              |                 |
      |                                   | が入っている場合のみ代入値\  |           |              |                 |
      |                                   | 管理への登録が行われます。   |           |              |                 |
      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+
      | 状態監視周期(単位ミリ秒)          | 「:ref:`ansible_pioneer_c\   | ○         | 手動入力     | 最小値1000\     |
      |                                   | heck_operation_status`」で\  |           |              | ミリ秒          |
      |                                   | 表示されるログのリフレッシ\  |           |              |                 |
      |                                   | ュ間隔を入力します。通常は3\ |           |              |                 |
      |                                   | 000ミリ秒程度が推奨値です。  |           |              |                 |
      |                                   |                              |           |              |                 |
      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+
      | 進行状態表示行数                  | 「:ref:`ansible_pioneer_c\   | ○         | 手動入力     | ー              |
      |                                   | heck_operation_status`」\    |           |              |                 |
      |                                   | での進行ログ・エラーログの\  |           |              |                 |
      |                                   | 最大表示行数を入力します。   |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | ステータスが[未実\           |           |              |                 |
      |                                   | 行]、[準備中]、[実行中]、[\  |           |              |                 |
      |                                   | 実行中(遅延)]の場合、指定し\ |           |              |                 |
      |                                   | た行数でログを出力します。   |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | ステータス\                  |           |              |                 |
      |                                   | が[完了]、[完了(異常)]、[想\ |           |              |                 |
      |                                   | 定外エラー]、[緊急停止]、[\  |           |              |                 |
      |                                   | 未実行(予約)]、[予約取消]の\ |           |              |                 |
      |                                   | 場合、指定した行数ではなく\  |           |              |                 |
      |                                   | すべてのログを出力します。   |           |              |                 |
      |                                   |                              |           |              |                 |
      |                                   | 環境毎にチュ\                |           |              |                 |
      |                                   | ーニングを要しますが、通常\  |           |              |                 |
      |                                   | は1000行程度が推奨値です。   |           |              |                 |
      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+
      | 備考                              | 自由記述欄です。             | ー        | 手動入力     | 最大長\         |
      |                                   |                              |           |              | 4000バイト      |
      +-----------------+--------+--------+------------------------------+-----------+--------------+-----------------+


.. _ansible_pioneer_ansible_automation_controlller_hosts:

Ansible Automation Controller ホスト一覧
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: ../../include/ansible_option_ansible_automation_controlller_hosts.rst


.. _ansible_pioneer_global_variable_list:

グローバル変数管理
~~~~~~~~~~~~~~~~~~


.. include:: ../../include/ansible_option_global_variable_list.rst


.. _ansible_pioneer_file_list:

ファイル管理
~~~~~~~~~~~~

.. include:: ../../include/ansible_option_file_list.rst


.. _ansible_pioneer_template_list:

テンプレート管理
~~~~~~~~~~~~~~~~

#. | :menuselection:`Ansible共通-->テンプレート管理` では、Playbookで定義しているtemplateモジュールやios_configモジュールなどのパラメータで使用するJinja2テンプレートファイルとテンプレート埋込変数のメンテナンス(閲覧/登録/更新/廃止)を行います。
   | テンプレート管理でテンプレート素材を登録しておくことで、Playbook内で定義しているtemplateモジュールなどで使用するtemplateファイルをテンプレート埋込変数で指定することができます。

   .. figure:: /images/ja/ansible_common/template_management/template_list.png
      :width: 800px
      :alt: サブメニュー画面（テンプレート管理）

      サブメニュー画面（テンプレート管理）

#. | :guilabel:`＋ 登録` ボタンより、テンプレート管理情報の登録を行います。

   .. figure:: /images/ja/ansible_common/template_management/template_list.gif
      :width: 800px
      :alt: 登録画面（テンプレート管理）

      登録画面（テンプレート管理）
   

#. | 登録画面の項目は以下のとおりです。

   .. list-table:: 登録画面項目一覧（テンプレート管理）
      :widths: 15 50 5 10 20
      :header-rows: 1
      :align: left

      * - 項目
        - 説明
        - 入力必須 
        - 入力方法
        - 制約事項
      * - テンプレート埋込変数名
        - | templateモジュールやios_configモジュールなどのパラメータに埋め込む変数名を入力します。
          | 変数名は、「TPF_****」形式で入力します。
          | \****\：半角英数字とアンダースコア（ _ ）が利用可能です。(最小値:1バイト、最大値:255バイト)
        - ○ 
        - 手動入力
        - 説明欄記載のとおり
      * - テンプレート素材
        - モジュールのパラメータで使用するJinja2テンプレートファイルをアップロードします。
        - ○ 
        - ファイル登録
        - | テキスト形式
          | 最大サイズ100Mバイト
      * - 変数定義
        - | テンプレート素材で使用している変数を定義します。
          | 具体値は定義のみで使用することはありません。
          | Ansible-Pioneerのみで使用するテンプレートで、default変数定義ファイルなどに変数定義をしている場合、変数定義は省略できます。
          | 同名の変数を複数のテンプレートで使用する場合、変数定義を合わせる必要があります。変数定義が一致していない場合は登録でエラーとなります。
          | 変数定義はAnsibleの仕様に準拠していますが、ITA独自仕様があります。変数名の命名規則は「 :ref:`ansible_pioneer_variable_handling` 」と同様です。
        - ー 
        - 手動入力
        - 最大長4000バイト
      * - 備考
        - 自由記述欄です。
        - ー 
        - 手動入力
        - 最大長4000バイト


.. warning:: | **テンプレートの変数定義を読み取るタイミング**
   | 内部の処理でテンプレートの変数定義を読み取り、「 :ref:`ansible_pioneer_substitution_value_auto_registration_setting` 」で具体値が登録可能になります。
   | 読み取りのタイミングはリアルタイムではないので、「 :ref:`ansible_pioneer_substitution_value_auto_registration_setting` 」で変数が扱えるまでに **時間がかかる** 場合があります。

.. include:: ../../include/ansible_option_template_list.rst


.. _ansible_pioneer_unmanaged_var_list:

管理対象外変数リスト
~~~~~~~~~~~~~~~~~~~~        

.. include:: ../../include/ansible_option_unmanaged_var_list.rst


Ansible-Pioneerコンソール
------------------------------

| Ansible-Pioneerコンソールの操作です。

.. _ansible_pioneer_os_types:

OS種別マスタ
~~~~~~~~~~~~
#. | :menuselection:`Ansible-Pioneer-->OS種別マスタ` では、ITA の Pioneer より操作対象となる機器の OS種別を管理します。
   | ※本メニューは Ansible-Pioneer コンソールにのみ存在します。

   .. figure:: /images/ja/ansible-legacyrole/movement_list/movement_list.png
      :width: 800px
      :alt: サブメニュー画面（OS種別マスタ）

      サブメニュー画面（OS種別マスタ）

#. | :guilabel:`＋ 登録` ボタンより、OS情報の登録を行います。

   .. figure:: /images/ja/ansible-legacyrole/movement_list/movement_list.png
      :width: 800px
      :alt: 登録画面（OS種別マスタ）

      登録画面（OS種別マスタ）

#. | 一覧/更新の :guilabel:`対話素材ファイル集` ボタンをクリックすると、対象の :ref:`ansible_pioneer_dialog_files_ansible_pioneer_only` へ遷移します。

   .. figure:: /images/ja/ansible-legacyrole/movement_list/movement_list.png
      :width: 800px
      :alt: サブメニュー画面（OS種別マスタ）

      サブメニュー画面（OS種別マスタ）


#. | 登録画面の項目一覧は以下のとおりです。

   .. table:: 登録画面項目一覧（OS種別マスタ）
      :align: left

      +----------------------------+------------------------------------------------------------------------+--------------------+-----------------------+-------------------------------------------------+
      | 項目                       | 説明                                                                   | 入力必須           | 入力形式              | 制約事項                                        |                                           
      +============================+========================================================================+====================+=======================+=================================================+
      | OS種別ID                   | 登録情報を識別する一意のIDが自動入力されます。                         | 〇                 | 自動入力              | ー                                              |                                    
      +----------------------------+------------------------------------------------------------------------+--------------------+-----------------------+-------------------------------------------------+
      | OS種別名                   | 任意の機器名称を入力します。                                           | 〇                 | 手動入力              | 最大長256バイト                                 |                                    
      +-------------+--------------+------------------------------------------------------------------------+--------------------+-----------------------+-------------------------------------------------+
      |             | SV           | 機器種別がサーバの場合「●」を選択します。　                            | ー                 | リスト選択            | ー                                              |                                    
      |             +--------------+------------------------------------------------------------------------+--------------------+-----------------------+-------------------------------------------------+
      | 機種別      | NW           | 機器種別がネットワーク機器の場合「●」を選択します。                    | ー                 | リスト選択            | ー                                              |                                    
      |             +--------------+------------------------------------------------------------------------+--------------------+-----------------------+-------------------------------------------------+
      |             | ST           | 機器種別がストレージ機器の場合「●」を選択します。                      | ー                 | リスト選択            | ー                                              |                                    
      +-------------+--------------+------------------------------------------------------------------------+--------------------+-----------------------+-------------------------------------------------+
      | 備考                       | 自由記述欄です。                                                       | ー                 | 手動入力              | ー                                              |                                    
      +----------------------------+------------------------------------------------------------------------+--------------------+-----------------------+-------------------------------------------------+


.. _ansible_pioneer_movement_list:

Movement一覧
~~~~~~~~~~~~

#. | :menuselection:`Ansible-Pioneer-->Movement一覧` ではMovement名のメンテナンス(閲覧/登録/更新/廃止)を行います。

   .. figure:: /images/ja/ansible-legacyrole/movement_list/movement_list.png
      :width: 800px
      :alt: サブメニュー画面（Movement一覧）

      サブメニュー画面（Movement一覧）

#. | :guilabel:`＋ 登録` ボタンより、Movement情報の登録を行います。

   .. figure:: /images/ja/ansible-legacyrole/movement_list/registration_movement_list.gif
      :width: 800px
      :alt: 登録画面（Movement一覧）

      登録画面（Movement一覧）


#. | 登録画面の項目一覧は以下のとおりです。

   .. table:: 登録画面項目一覧（Movement一覧）
      :align: left

      +-----------------------------------+-------------------------------------------------+-----------+--------------+-------------------+
      | 項目                              | 説明                                            | 入力必須  | 入力方法     | 制約事項          |
      |                                   |                                                 |           |              |                   |
      |                                   |                                                 |           |              |                   |
      +===================================+=================================================+===========+==============+===================+
      | Movement名                        | Movementの名称を入力します。                    | ○         | 手動入力     | 最大長255バイト   |
      +-----------------------------------+-------------------------------------------------+-----------+--------------+-------------------+
      | 遅延タイマー                      | Movementが指定期間遅延した場合にステータスを\   | ー        | 手動入力     | ー                |
      |                                   | 遅延として警告表示したい場合に指定期間(1～)を\  |           |              |                   |
      |                                   | 入力します。(単位:分)                           |           |              |                   |
      |                                   |                                                 |           |              |                   |
      |                                   | 未入力の場合は警告表示しません。                |           |              |                   |
      +-----------------+-----------------+-------------------------------------------------+-----------+--------------+-------------------+
      | Ansible利用情報 | ホスト指定形式  | 特別にIPアドレスで表現しないホストを指定したい\ | ○         | リスト選択   | ー                |
      |                 |                 | 場合に「ホスト名」を選択します。                |           |              |                   |
      |                 |                 |                                                 |           |              |                   |
      |                 |                 | 通常はIPが推奨です。                            |           |              |                   |
      |                 +-----------------+-------------------------------------------------+-----------+--------------+-------------------+
      |                 | WinRM接続       | 対象ホストがWindowsServerの場合に、\            | ー        | リスト選択   | ー                |
      |                 |                 | 「●」を選択します。                             |           |              |                   |
      |                 +-----------------+-------------------------------------------------+-----------+--------------+-------------------+
      |                 | ヘッダー\       | ITAが自動生成する親Playbookの先頭からtasksまた\ | ー        | 手動入力     | 最大長4000バイト  |
      |                 | セクション      | はrolesセクションまでのセクションを編集します。 |           |              |                   |
      |                 |                 |                                                 |           |              |                   |
      |                 |                 | 未入力の場合は、以下を適用します。              |           |              |                   |
      |                 |                 |                                                 |           |              |                   |
      |                 |                 | .. code-block:: yaml                            |           |              |                   |
      |                 |                 |                                                 |           |              |                   |
      |                 |                 |    # Ansible                                    |           |              |                   |
      |                 |                 |    - hosts: all                                 |           |              |                   |
      |                 |                 |      remote_user: "{{ __loginuser__ }}"         |           |              |                   |
      |                 |                 |      gather_facts: no                           |           |              |                   |
      |                 |                 |      become: yes                                |           |              |                   |
      |                 |                 |                                                 |           |              |                   |
      |                 |                 |    # Ansible Automation Controller              |           |              |                   |
      |                 |                 |    - hosts: all                                 |           |              |                   |
      |                 |                 |      gather_facts: no                           |           |              |                   |
      |                 |                 |      become: yes                                |           |              |                   |
      |                 |                 |                                                 |           |              |                   |
      |                 |                 | ※winrm接続の場合は become: yesは適用しません。  |           |              |                   |
      |                 +-----------------+-------------------------------------------------+-----------+--------------+-------------------+
      |                 | オプション\     | Movement固有のオプションパラメータを入力します。| ー        | 手動入力     | 最大長4000バイト  |
      |                 | パラメータ      |                                                 |           |              |                   |
      |                 |                 | 実行エンジンがAnsible Coreの場合はansible-play\ |           |              |                   |
      |                 |                 | bookコマンドのオプションパラメータ、実行エンジ  |           |              |                   |
      |                 |                 | ンがAnsible Core以外の場合はジョブテンプレート\ |           |              |                   |
      |                 |                 | のパラメータを入力します。                      |           |              |                   |
      |                 |                 |                                                 |           |              |                   |
      |                 |                 | オプションパラメータの詳細については、「 \      |           |              |                   |
      |                 |                 | :ref:`ansible_legacyrole_option\                |           |              |                   |
      |                 |                 | _parameter_list` 」を参照してください。         |           |              |                   |
      |                 +-----------------+-------------------------------------------------+-----------+--------------+-------------------+
      |                 | ansible.cfg     | 作業実行時に使用するansible.cfgを\              | ー        | ファイル選択 | 最大サイズ100M\   |
      |                 |                 | アップロードします。                            |           |              | バイト            |
      |                 |                 |                                                 |           |              |                   |
      |                 |                 | 未アップロードの場合は、デフォルトが使用され\   |           |              |                   |
      |                 |                 | ます。                                          |           |              |                   |
      |                 |                 |                                                 |           |              |                   |
      |                 |                 | また、ロールパッケージ管理でアップロードされて\ |           |              |                   |
      |                 |                 | いるzipファイルにansible.cfgが含まれている場合\ |           |              |                   |
      |                 |                 | は、この項目でアップロードしたansible.cfgで\    |           |              |                   |
      |                 |                 | 上書きされます。                                |           |              |                   |
      |                 +--------+--------+-------------------------------------------------+-----------+--------------+-------------------+
      |                 | Ansibl\| 実行\  | Ansible Automation Controllerサーバに構築され\  | ー        | リスト選択   |                   |
      |                 | e Auto\| 環境   | ている実行環境が表示されています。              |           |              |                   |
      |                 | matio\ |        |                                                 |           |              |                   |
      |                 | n Cont\|        | 実行する実行環境を選択します。                  |           |              |                   |
      |                 | roller\|        |                                                 |           |              |                   |
      |                 | 利用\  |        | 未選択の場合は、デフォルト「Default execution \ |           |              |                   |
      |                 | 情報   |        | environment」が使用されます。                   |           |              |                   |
      +-----------------+--------+--------+-------------------------------------------------+-----------+--------------+-------------------+
      | 備考                              | 自由記述欄です。                                | ー        | 手動入力     | 最大長4000バイト  |
      +-----------------------------------+-------------------------------------------------+-----------+--------------+-------------------+
   

   .. warning:: 
      | WinRM接続で「〇」を選択した場合は接続するホストをすべてWindowsServerとみなします。

   
.. _ansible_pioneer_dialog_type_list_ansible_pioneer_only:

対話種別リスト
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#. | :menuselection:`Ansible-Pioneer-->対話種別リスト` では、対話種別の登録／更新／廃止を行います。
   | ※本メニューはAnsible-Pioneer コンソールにのみ存在します。
   | Ansible-Pioneerでは、「OS種別」ごとの差異を対話ファイルごとに定義し、同一目的の対話ファイルを「対話種別」として纏めて機器差分を吸収(抽象化)します。

   .. figure:: ./general_operations/image35.png
      :width: 6.25388in
      :height: 2.78024in
      :alt: サブメニュー画面（対話種別リスト）

      サブメニュー画面（対話種別リスト）

#. | :guilabel:`＋ 登録` ボタンより、オペレーション情報の登録を行います。

   .. figure:: ./general_operations/image36.png
      :width: 5.38086in
      :height: 0.9422in
      :alt: 登録画面（対話種別リスト）
   
      登録画面（対話種別リスト）

#. | 一覧/更新の :guilabel:`Movement-対話種別紐付` ボタンをクリックすると、対象の :ref:`ansible_pioneer_movement_details` へ遷移します。対話素材ファイル集ボタンをクリックすると、対象の :ref:`ansible_pioneer_dialog_files_ansible_pioneer_only` へ遷移します。

   .. figure:: ./general_operations/image37.png
      :width: 6.06944in
      :height: 1.17301in
      :alt: サブメニュー画面（対話種別リスト）

      サブメニュー画面（対話種別リスト）

#. | 登録画面の項目一覧は以下のとおりです。

   .. list-table:: 登録画面項目一覧（対話種別リスト）
      :widths: 15 50 5 10 20
      :header-rows: 1
      :align: left

      * - 項目
        - 説明
        - 入力必須 
        - 入力方法
        - 制約事項
      * - 対話種別名
        - 対話種別名を入力します
        - 〇
        - リスト選択
        - 最大長256バイト
      * - 備考
        - 自由記述欄です。
        - ー
        - 手動入力
        - 最大長4000バイト



.. _ansible_pioneer_dialog_files_ansible_pioneer_only:

対話ファイル素材集
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#. | :menuselection:`Ansible-Pioneer-->対話ファイル素材集` では、ユーザーが作成した対話ファイルの登録／更新／廃止を行います。
   | ※本メニューは、Ansible-Pioneer コンソールにのみ存在します。

#. | 対話ファイルの記述などに関しては、「 :ref:`ansible_pioneer_write_dialog_file_ansible_pioneer` 」を参照してください。
   | 「対話種別」と「OS種別」の組み合わせごとに対話ファイルを登録します。
   | １つの「対話種別」で複数のOSに対応させたい場合は、同じ「対話種別」で、「OS種別」それぞれについて対話ファイルを登録してください。

   .. figure:: ./general_operations/image38.png
      :width: 6.4939in
      :height: 2.90025in
      :alt: サブメニュー画面（対話ファイル素材集）

      サブメニュー画面（対話ファイル素材集）

#. | :guilabel:`＋ 登録` ボタンより、対話ファイル素材の登録を行います。

   .. figure:: ./general_operations/image36.png
      :width: 5.19507in
      :height: 0.90966in
      :alt: 登録画面（対話ファイル素材集）

      登録画面（対話ファイル素材集）

#. | 一覧/更新の対話種別のリンクをクリックすると、対象の :ref:`ansible_pioneer_dialog_type_list_ansible_pioneer_only` へ遷移します。
   | また、OS種別のリンクをクリックすると、対象の :ref:`ansible_pioneer_os_types` へ遷移します。

   .. figure:: ./general_operations/image39.png
      :width: 6.2281in
      :height: 1.2785in
      :alt: サブメニュー画面（対話ファイル素材集）

      サブメニュー画面（対話ファイル素材集）

#. | 登録画面の項目一覧は以下のとおりです。



   .. list-table:: 登録画面項目一覧（対話ファイル素材集）
      :widths: 15 50 5 10 20
      :header-rows: 1
      :align: left

      * - 対話種別
        - 説明
        - 入力必須 
        - 入力方法
        - 制約事項
      * - 対話種別名
        - | 対話種別リストに登録されている対話種別が表示されます。
          | 登録する対話ファイルの対話種別を選択します。
        - 〇
        - リスト選択
        - ー
      * - OS種別
        - | OS種別マスタに登録されているOS種別が表示されます。
          | 登録する対話ファイルのOS種別を選択します。
        - 〇
        - リスト選択
        - ー
      * - 対話ファイル素材
        - | 対話種別とOS種別に対応する対話ファイルをアップロードします。
          | アップロードする対話ファイルは文字コードが UTF-8 のBOMなしで作成して下さい。
          | 文字コードが UTF-8 のBOMなし以外の対話ファイルはアップロードでエラーになります。
        - 〇
        - ファイル登録
        - 最大サイズ4Gバイト
      * - 備考
        - 自由記述欄です。
        - ー
        - 手動入力
        - 最大長4000バイト


   | 「登録」の前に、「対話ファイル」を「事前アップロード（①）」してください。「アップロード状況（②）」に対話ファイルのファイル名が表示されたのを確認してから、「登録」ボタンを押してください。

   .. image:: ./general_operations/image_2a_3.png
      :width: 1.81218in
      :height: 0.98027in
      :align: center

   | 対話ファイルはYAML形式のファイルとして扱います。YAML形式に準じていない記述があると、アップロード時にエラーとなります。詳しくは、「 :ref:`ansible_pioneer_things_to_keep_in_mind_when_writing_dialogue_files_in_yaml_format` 」を参照してください。
   | 内部の処理で対話ファイル内に定義している変数を取り出します。取り出した変数は、「 :ref:`ansible_pioneer_substitution_value_auto_registration_setting` 」で具体値の登録が可能になります。
   | 抜出するタイミングはリアルタイムではありませんので、「 :ref:`ansible_pioneer_substitution_value_auto_registration_setting` 」で変数が扱えるまでに **時間がかかる※** 場合があります。

.. _ansible_pioneer_movement_details:

Movement-対話種別紐付
~~~~~~~~~~~~~~~~~~~~~~~~~~

#. | Movementで実行するロールパッケージのメンテナンス(閲覧/登録/更新/廃止)を行います。

   .. figure:: /images/ja/ansible-legacyrole/movement_role/movement_role.png
      :width: 800px
      :alt: サブメニュー画面（Movement-対話種別紐付）

      サブメニュー画面（Movement-対話種別紐付）

#. | :guilabel:`＋ 登録` ボタンより、Movement-対話種別紐付の登録を行います。

   .. figure:: /images/ja/ansible-legacyrole/movement_role/registration_movement_role.gif
      :width: 800px
      :alt: 登録画面（Movement-対話種別紐付）

      登録画面（Movement-対話種別紐付）

#. | 登録画面の項目一覧は以下のとおりです。

   .. list-table:: 登録画面項目一覧（Movement-対話種別紐付の場合）
      :widths: 15 50 5 10 20
      :header-rows: 1
      :align: left

      * - 対話種別
        - 説明
        - 入力必須 
        - 入力方法
        - 制約事項
      * - Movement
        - | Movement一覧で登録したMovementが表示されます。
          | Movement を選択します。
        - 〇
        - リスト選択
        - ー
      * - 対話種別
        - | 「 :ref:`ansible_pioneer_dialog_type_list_ansible_pioneer_only` 」で登録した対話種別が表示されます。
          | 実行する対話種別を選択します。
          | ホスト毎にOS種別と対話種別に関連付く対話ファイルが実行対象となります。
        - 〇
        - リスト選択
        - ー
      * - インクルード順序
        - | プレイブック素材の実行順序(1～:一意値)を入力します。
          | 入力されたインクルード順序(昇順)でプレイブック素材が実行されます。
        - 〇
        - 手動入力
        - 半角整数
      * - 備考
        - 自由記述欄です。
        - 〇
        - 手動入力
        - 最大長4000バイト


.. _ansible_pioneer_substitution_value_auto_registration_setting:

代入値自動登録設定
~~~~~~~~~~~~~~~~~~

#. | メニュー作成機能で作成したパラメータシートの項目の設定値とMovementの変数を紐付けます。登録した情報は内部の処理により代入値管理と作業対象ホストに反映されます。

   .. figure:: /images/ja/ansible-legacyrole/substitution_value_automatic_setting/substitution_value_auto_registration_setting_role.png
      :width: 800px
      :alt: サブメニュー画面（代入値自動登録設定）

      サブメニュー画面（代入値自動登録設定）

#. | :guilabel:`＋ 登録` ボタンより代入値自動登録設定を行います。

   .. figure:: /images/ja/ansible-legacyrole/substitution_value_automatic_setting/registration_substitution_value_auto_registration_setting_role.gif
      :width: 800px
      :alt: 登録画面（代入値自動登録設定）

      登録画面（代入値自動登録設定）


#. | 登録画面の項目一覧は以下のとおりです。


   .. table:: 登録画面項目一覧（代入値自動登録設定）
      :align: left

      +-----------------------------------+-------------------------------------------------+----------------------------------------------+--------------+-------------------+
      | 項目                              | 説明                                            | 入力必須                                     | 入力方法     | 制約事項          |
      |                                   |                                                 |                                              |              |                   |
      |                                   |                                                 |                                              |              |                   |
      +=================+=================+=================================================+==============================================+==============+===================+
      | パラメータシー\ | メニューグルー\ | メニュー作成機能で作成したパラメータシートの項\ | ○                                            | リスト選択   | ー                |
      | ト(From)        | プ:メニュー:項目| 目が表示されます。                              |                                              |              |                   |
      |                 |                 |                                                 |                                              |              |                   |
      |                 |                 | 対象の項目を選択します。                        |                                              |              |                   |
      |                 |                 |                                                 |                                              |              |                   |
      |                 +-----------------+-------------------------------------------------+----------------------------------------------+--------------+-------------------+
      |                 | 代入順序        | メニュー作成機能で作成したパラメータシートが\   |  :ref:`※1 <parashi_substitution>`            | 手動入力     | 1～2147483647     |
      |                 |                 | 縦型メニューの場合、\                           |                                              |              |                   |            
      |                 |                 | パラメータシートで登録している代入順序を\       |                                              |              |                   |
      |                 |                 | 入力します。                                    |                                              |              |                   |
      +-----------------+-----------------+-------------------------------------------------+----------------------------------------------+--------------+-------------------+
      | 登録方式                          | Value型:項目の設定値を紐付けた変数の具体値\     | ○                                            | リスト選択   | ー                |
      |                                   | とする場合に選択します。                        |                                              |              |                   |
      |                                   |                                                 |                                              |              |                   |
      |                                   | Key型:項目の名称を紐付けた変数の具体値\         |                                              |              |                   |
      |                                   | とする場合に選択します。                        |                                              |              |                   |
      |                                   |                                                 |                                              |              |                   |
      |                                   | 項目の設定値が空白の場合\                       |                                              |              |                   |
      |                                   | は紐付け対象外となります。                      |                                              |              |                   |
      +-----------------------------------+-------------------------------------------------+----------------------------------------------+--------------+-------------------+
      | Movement名                        | Movement一覧で登録したMovementが表示されます。  | ○                                            | リスト選択   | ー                |
      |                                   |                                                 |                                              |              |                   |
      |                                   | Movementを選択します。                          |                                              |              |                   |
      +-----------------+-----------------+-------------------------------------------------+----------------------------------------------+--------------+-------------------+
      | IaC変数(To)     | Movement名\     | Movement-ロール紐付で登録した資材で使用している\| ○                                            | リスト選択   | ー                |
      |                 | :変数名         | 変数が表示されます。                            |                                              |              |                   |
      |                 |                 |                                                 |                                              |              |                   |
      |                 |                 | 具体値に紐付けたい変数を選択します。            |                                              |              |                   |
      |                 +-----------------+-------------------------------------------------+----------------------------------------------+--------------+-------------------+
      |                 | 代入順序        | 複数具体値が設定できる変数の場合のみ必須入力\   |  :ref:`※2 <substitution>`                    | 手動入力     | 1～2147483647     |
      |                 |                 | になります。                                    |                                              |              |                   |
      |                 |                 |                                                 |                                              |              |                   |
      |                 |                 | 具体値の代入順序（1～）を入力します。入力値に\  |                                              |              |                   |
      |                 |                 | 従い昇順で代入されます。具体値が複数ない場合で\ |                                              |              |                   |
      |                 |                 | も代入順序（1～）を入力します。                 |                                              |              |                   |
      +-----------------+-----------------+-------------------------------------------------+----------------------------------------------+--------------+-------------------+
      | NULL連携                          | パラメータシートの具体値がNULL(空白)の場合に、\ | ※3                                           | リスト選択   | ー                |
      |                                   | 代入値管理への登録をNULL(空白)の値で行うか設定\ |                                              |              |                   |
      |                                   | します。                                        |                                              |              |                   |
      |                                   |                                                 |                                              |              |                   |
      |                                   | ・「True」の場合、パラメータシートの値がどのよ\ |                                              |              |                   |
      |                                   | うな値でも代入値管理への登録が行われます。      |                                              |              |                   |
      |                                   |                                                 |                                              |              |                   |
      |                                   | ・「False」の場合、パラメータシートに値が入っ\  |                                              |              |                   |
      |                                   | ている場合のみ代入値管理への登録が行われます。  |                                              |              |                   |
      |                                   |                                                 |                                              |              |                   |
      |                                   | ・空白の場合、Ansibleインターフェース情報の\    |                                              |              |                   |
      |                                   | 「NULL連携」の値が適用されます。                |                                              |              |                   |
      +-----------------------------------+-------------------------------------------------+----------------------------------------------+--------------+-------------------+
      | 備考                              | 自由記述欄です。                                | ー                                           | 手動入力     | 最大長4000バイト  |
      +-----------------------------------+-------------------------------------------------+----------------------------------------------+--------------+-------------------+
   
   | ※1:パラメータシート(縦メニュー)を使用する場合のみ必須
   | ※2:選択した変数が複数具体値設定可能な変数の場合のみ必須
   | ※3:任意

.. _parashi_substitution:

.. note:: | **パラメータシート(縦メニュー)の場合**
   | パラメータシート(縦メニュー)のリピート設定されている項目とMovementの変数を紐付ける場合、 :menuselection:`Ansible-Pioneer-->代入値自動登録設定` でパラメータシート(From) の代入順序を入力する必要があります。
   | パラメータシート(縦メニュー)と代入値自動登録設定の関係を以下の図に示します。

   .. figure:: /images/ja/diagram/parameter.png
      :width: 600px
      :alt: パラメータシート(縦メニュー)使用時の代入値自動登録設定登録方法

..
  .. _member:
  
  .. note:: | **メンバー変数の選択**
     
     | 多段変数の場合にのみメンバー変数の選択が必要になります。メンバー変数に表示される変数は具体値を必要とする変数のみです。
     | メンバー変数名の表示は各階層の変数を「.」でスコープします。
     | 繰返配列の場合は「[ ]」で繰返位置(0～)をスコープします。繰返し配列の数は「 :ref:`ansible_pioneer_nested_variable_list_ansible_legacy_role_only` 」で設定を行います。
     |
     | e.g.) 代入値自動登録設定で選択できるメンバー変数と変数ネスト管理で最大繰返数を更新後に選択できるメンバー変数の確認
     
     #. | 下記のようにロールパッケージの変数定義ファイル(defaults/main.yml)に変数を定義して、 :menuselection:`Ansible-Pioneer-->ロールパッケージ管理` でロールパッケージを登録します。
        | **変数定義ファイルの記述内容**                                                         
                                                                                
        .. code-block:: yaml
  
           VAR_aaaa:
             - name: alice
               object: obj1
               directory: 
                 - craete_dir: /dir
               password:
                 - craete_pass: 
                   sample:
                     - sample_pass: pass1
                 - craete_pass: 
                   sample:
                     - sample_pass: pass2
               user:
                 root:
                   - craete_users: 
                     prod:
                       - prod_user: user1
                     dev:
                       - dev_user: user2
    
     #. | 1. のように変数を定義してロールパッケージを登録した場合、 :menuselection:`Ansible-Pioneer-->変数ネスト管理` には下記のように登録され、 :menuselection:`Ansible-Pioneer-->代入値自動登録設定` ではデフォルトで下記のメンバー変数が選択できます。
     
        .. table:: 変数ネスト管理の登録内容
           :align: left
  
           +----------------------------+------------------------+----------------------------+
           | **変数名**                 | **メンバー変数名**     | **最大繰返数**             |
           |                            |                        |                            |
           +============================+========================+============================+
           | VAR_aaaa                   | 0                      | 1                          |
           +----------------------------+------------------------+----------------------------+
           | VAR_aaaa                   | 0.directory            | 1                          |
           +----------------------------+------------------------+----------------------------+
           | VAR_aaaa                   | 0.password             | 1                          |
           +----------------------------+------------------------+----------------------------+
           | VAR_aaaa                   | 0.password.sample      | 1                          |
           +----------------------------+------------------------+----------------------------+
           | VAR_aaaa                   | 0.user.root            | 1                          |
           +----------------------------+------------------------+----------------------------+
           | VAR_aaaa                   | 0.user.root.dev        | 1                          |
           +----------------------------+------------------------+----------------------------+
           | VAR_aaaa                   | 0.user.root.prod       | 1                          |
           +----------------------------+------------------------+----------------------------+
        
        .. table:: 代入値自動登録設定で選択可能なメンバー変数
           :align: left
  
           +----------------------------+-----------------------------------------+
           | **変数名**                 | **メンバー変数名**                      | 
           |                            |                                         |                            
           +============================+=========================================+
           | VAR_aaaa                   | [0].directory[0].create_dir             | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].name                                | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].object                              |
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].password[0].create_pass             | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].password[0].sample[0].sample_pass   | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].user.root[0].create_users           | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].user.root[0].dev[0].dev_user        | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].user.root[0].prod[0].prod_user      | 
           +----------------------------+-----------------------------------------+
     
     #. | :menuselection:`Ansible-Pioneer-->変数ネスト管理` でメンバー変数「0.user.root.prod」の最大繰返数を初期値"1"から"3"に更新します。
  
        .. table:: 変数ネスト管理の更新内容
           :align: left
  
           +----------------------------+------------------------+----------------------------+
           | **変数名**                 | **メンバー変数名**     | **最大繰返数**             |
           |                            |                        |                            |
           +============================+========================+============================+
           | VAR_aaaa                   | 0.user.root.prod       | 3                          |
           +----------------------------+------------------------+----------------------------+
     
     #. | 3. のようにメンバー変数を更新した場合、 :menuselection:`Ansible-Pioneer-->代入値自動登録設定` で選択できるメンバー変数も下記のように更新されます。
        | （メンバー変数 [0].user.root[0].prod[1].prod_user と [0].user.root[0].prod[2].prod_user がプルダウンに追加されました。）
  
        .. table:: 代入値自動登録設定で選択可能なメンバー変数
           :align: left
  
           +----------------------------+-----------------------------------------+
           | **変数名**                 | **メンバー変数名**                      | 
           |                            |                                         |                            
           +============================+=========================================+
           | VAR_aaaa                   | [0].directory[0].create_dir             | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].name                                | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].object                              |
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].password[0].create_pass             | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].password[0].sample[0].sample_pass   | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].user.root[0].create_users           | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].user.root[0].dev[0].dev_user        | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].user.root[0].prod[0].prod_user      | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].user.root[0].prod[1].prod_user      | 
           +----------------------------+-----------------------------------------+
           | VAR_aaaa                   | [0].user.root[0].prod[2].prod_user      | 
           +----------------------------+-----------------------------------------+
  

.. _substitution:

.. note:: | **代入順序の入力**
  
   | 代入順序が未入力の場合は、通常変数として扱います。
   | 代入順序が入力されている場合は、複数具体値変数として扱います。複数具体値変数の場合は、
   | 複数の具体値が必要ない場合(具体値が 1 個でよい)でも代入順序を入力してください。
   | 特定の複数具体値変数に対して代入順序が連続していなくても問題ありません。
   |
   | e.g.)複数具体値変数に代入順序を入力して作業実行する場合
   
   #. | 下記のようにロールパッケージの変数定義ファイル(defaults/main.yml)に変数を定義して、 :menuselection:`Ansible-Pioneer-->ロールパッケージ管理` でロールパッケージを登録します。                                                              
      | **変数定義ファイルの記述内容**

      .. code-block:: yaml

         VAR_substitutionA:
           - user-name
           - group-name
           - meta-name
         
         VAR_substitutionB:
           - login
           - authorized
           - space
           - cluster         
   
   #. | :menuselection:`Ansible-Pioneer-->代入値自動登録設定` で紐付対象メニューに登録されている項目の設定値とRole内の変数を紐付けします。
   
      .. table:: 紐付対象メニュー(sample-menu)の登録内容
         :align: left
         
         +----------------+------------------------+----------+----------+----------+----------+
         | **ホスト名**   | **オペレーション名**   | **パラメータ**                            |
         |                |                        +----------+----------+----------+----------+
         |                |                        | **項目1**| **項目2**| **項目3**| **項目4**|
         +================+========================+==========+==========+==========+==========+
         | test-host      | test-ope               | value1   | value2   | value3   | value4   |
         +----------------+------------------------+----------+----------+----------+----------+
   
      .. table:: 代入値自動登録設定の登録内容
         :align: left
         
         +---------------+-----------+--------------------+----------------+
         | **メニュー名**| **項目**  | **変数名**         | **代入順序**   |
         +===============+===========+====================+================+
         | sample-menu   | 項目1     | VAR_substitutionA  | 3              |
         +---------------+-----------+--------------------+----------------+
         | sample-menu   | 項目2     | VAR_substitutionA  | 1              |
         +---------------+-----------+--------------------+----------------+
         | sample-menu   | 項目3     | VAR_substitutionA  | 2              |
         +---------------+-----------+--------------------+----------------+
         | sample-menu   | 項目1     | VAR_substitutionB  | 2              |
         +---------------+-----------+--------------------+----------------+
         | sample-menu   | 項目2     | VAR_substitutionB  | 4              |
         +---------------+-----------+--------------------+----------------+
         | sample-menu   | 項目3     | VAR_substitutionB  | 1              |
         +---------------+-----------+--------------------+----------------+
         | sample-menu   | 項目4     | VAR_substitutionB  | 3              |
         +---------------+-----------+--------------------+----------------+

   #. | 作業実行時、投入データ(InputData_xxxx.zip)内のホスト変数ファイル(host_vars/test-host)には、代入値自動登録設定で登録した変数が下記のように出力されます。
      | **ホスト変数ファイルへの出力内容**

      .. code-block:: yaml
   
         VAR_substitutionA: 
           - value2
           - value3
           - value1
         VAR_substitutionB: 
           - value3
           - value1
           - value4
           - value2

.. _host:

.. note:: | **ホスト変数ファイルへの出力**
   | 代入値自動登録設定で具体値を登録した変数のみが作業実行時にホスト変数ファイルへ出力されます。
   | 作業実行時に Playbook または対話ファイルで使用している変数の具体値が代入値管理に登録されていないと作業実行が想定外エラーとなります。
   | 
   | e.g.) 代入値自動登録設定で具体値を登録した変数と作業実行時にホスト変数ファイルに出力される変数の確認
   
   #. | 下記のようにロールパッケージの変数定義ファイル(defaults/main.yml)に変数を定義して、 :menuselection:`Ansible-Pioneer-->ロールパッケージ管理` でロールパッケージを登録します。                                                              
      | **変数定義ファイルの記述内容**

      .. code-block:: yaml

         VAR_output:
           - name: alice
             group: root
             user:
               root:
                 - craete_users: 
                   prod:
                     - prod_user: user1
                   dev:
                     - dev_user: user2         
   
   #. | :menuselection:`Ansible-Pioneer-->代入値自動登録設定` で紐付対象メニューに登録されている項目の設定値とRole内の変数を紐付けします。
   
      .. table:: 紐付対象メニュー(sample-menu)の登録内容
         :align: left
         
         +----------------+------------------------+----------+----------+
         | **ホスト名**   | **オペレーション名**   | **パラメータ**      |
         |                |                        +----------+----------+
         |                |                        | **項目1**| **項目2**|
         +================+========================+==========+==========+
         | test-host      | test-ope               | value1   | value2   |
         +----------------+------------------------+----------+----------+
   
      .. table:: 代入値自動登録設定の登録内容
         :align: left
         
         +---------------+-----------+-------------+----------------------------------+
         | **メニュー名**| **項目**  | **変数名**  | **メンバー変数名**               |
         +===============+===========+=============+==================================+
         | sample-menu   | 項目1     | VAR_output  | [0].name                         |
         +---------------+-----------+-------------+----------------------------------+
         | sample-menu   | 項目2     | VAR_output  | [0].user.root[0].dev[0].dev_user |
         +---------------+-----------+-------------+----------------------------------+

   #. | 作業実行時、投入データ(InputData_xxxx.zip)内のホスト変数ファイル(host_vars/test-host)には、代入値自動登録設定で登録した変数が下記のように出力されます。
      | **ホスト変数ファイルへの出力内容**

      .. code-block:: yaml
   
         VAR_output:
           - name: value1
             user:
               root:
               - dev:
                 - dev_user: value2

.. _file_and_templete:

.. note:: | **ファイル埋込変数とテンプレート埋込変数をPlaybookの変数に紐付して使用する例**
   | 「Ansible共通:ファイル管理:ファイル埋込変数名」「Ansible共通:テンプレート管理:テンプレート埋込変数名」をパラメータシートの項目として代入値自動登録設定で使用した場合、項目の設定値は選択されている変数名となり、紐付している変数の具体値は '{{ 変数名 }}' として代入値管理に反映されます。
   | ファイルパスはITAが作業実行時に配置したファイルパスをホスト変数経由でansibleが解釈し処理します。
   | e.g.) ファイル埋込変数 CPF_test とテンプレート埋込変数 TPF_sample を代入値自動登録設定でPlaybookの変数に紐付して使用する場合

   #. | :menuselection:`Ansible共通-->ファイル管理／テンプレート管理` で下記のように登録します。
      
      .. list-table:: ファイル管理の登録内容
         :widths: 50 40
         :header-rows: 1
         :align: left
      
         * - ファイル埋込変数名
           - ファイル素材
         * - CPF_test   
           - test_file.txt

      .. list-table:: テンプレート管理の登録内容
         :widths: 50 40
         :header-rows: 1
         :align: left
      
         * - テンプレート埋込変数名
           - テンプレート素材
         * - TPF_sample 
           - sample.tpl

   #. | :menuselection:`メニュー作成-->メニュー定義・作成` で「Ansible共通:ファイル管理:ファイル埋込変数名」「Ansible共通:テンプレート管理:テンプレート埋込変数名」をパラメータシートの項目としてメニュー作成後、 :menuselection:`入力用-->サンプルパラメータシート(メニュー名)` で項目の設定値としてファイル埋込変数とテンプレート埋込変数を登録します。
      
      .. figure:: /images/ja/menu_create/menu_definition_and_create/legacyrole_menucreate.png
         :width: 800px
         :alt: メニュー定義・作成画面

         メニュー定義・作成画面

      .. table:: サンプルパラメータシート(メニュー名)の登録内容
         :align: left
         
         +----------------+------------------------+-----------------+---------------------+
         | **ホスト名**   | **オペレーション名**   | **パラメータ**                        |
         |                |                        +-----------------+---------------------+
         |                |                        | **ファイル管理**| **テンプレート管理**|
         +================+========================+=================+=====================+
         | test-host      | test-ope               | CPF_test        | TPF_sample          |
         +----------------+------------------------+-----------------+---------------------+

   #. | :menuselection:`Ansible-Pioneer->代入値自動登録設定` でのパラメータシートに登録した項目の設定値とPlaybookの変数を紐付して :menuselection:`Ansible-Pioneer-->作業実行` で作業実行します。
      
      .. list-table:: 代入値自動登録設定の登録内容
         :widths: 50 30 30
         :header-rows: 1
         :align: left
      
         * - メニュー名
           - 項目
           - 変数名
         * - サンプルパラメータシート
           - ファイル管理 
           - VAR_filetest
         * - サンプルパラメータシート
           - テンプレート管理
           - VAR_temptest

   #. | :menuselection:`Ansible-Pioneer-->作業状態確認` の :guilabel:`代入値確認` ボタンで具体値に '{{ CPF_test }}' '{{ TPF_sample }}' が反映されていることが確認できます。
      | また、作業実行後、作業対象サーバに1. で登録したファイル素材とテンプレート素材が設置されます。

      .. figure:: /images/ja/ansible-legacyrole/assigned_value_management/general_operations_note.png
         :width: 800px
         :alt: 作業状態確認の代入値確認画面

         作業状態確認の代入値確認画面
  
.. _ansible_pioneer_execution:

作業実行
~~~~~~~~

| 作業の実行を指示します。Movement一覧、オペレーション一覧からそれぞれラジオボタンで選択し、 :guilabel:`作業実行` ボタンを押すと、「 :ref:`ansible_pioneer_check_operation_status` 」に遷移し、実行されます。

.. figure:: /images/ja/ansible-legacyrole/execution/execution_screen.gif
   :width: 800px
   :alt: 作業実行画面

   作業実行画面


#. | **ドライラン**
   | 「ドライラン」ボタンをクリックすると、実際に対象機器に対して構築作業をせず、ドライランを行うことができます。
   | ドライランを行った場合の動作は、Ansible-Playbookコマンドの--checkパラメータを指定してroleを実行します。


    
   ..    :align: left

   ..    +----------------+-----------------------------------------------------+
   ..    | **Driver**     | **動作**                                            |
   ..    +================+=====================================================+
   ..    | Ansible\       | Ansible-Playbookコ\                                 |
   ..    | -Legacy Role   | マンドの--checkパラメータを指定しroleを実行します。 |
   ..    +----------------+-----------------------------------------------------+

   .. +----------------+-----------------------------------------------------+
   .. | **Driver**     | **動作**                                            |
   .. +================+=====================================================+
   .. | Ansible-Legacy | Ansible-Playbookコマン\                             |
   .. |                | ドの—checkパラメータを指定しPlaybookを実行します。  |
   .. +----------------+-----------------------------------------------------+
   .. | Ansible\       | Ansible-Playbookコ\                                 |
   .. | -Legacy Role   | マンドの—checkパラメータを指定しroleを実行します。  |
   .. +----------------+-----------------------------------------------------+
   .. | A\             | 対象機器への接続チェックのみを行います。            |
   .. | nsible-Pioneer |                                                     |
   .. +----------------+-----------------------------------------------------+

#. | **予約日時の指定**
   | 「予約日時」を入力することで、実行を予約することがきます。
   | 「予約日時」には、未来の日時のみ登録可能です。


.. _ansible_pioneer_check_operation_status:

作業状態確認
~~~~~~~~~~~~

| 作業の実行状態を監視します。

.. figure:: /images/ja/ansible-legacyrole/check_work_status/check_operation_status.png
   :width: 800px
   :alt: サブメニュー画面（作業状態確認）

   サブメニュー画面（作業状態確認）

#. | **実行状態表示**
   | 実行状況に即し、「ステータス」が表示されます。
   | また、実行ログ、エラーログに実行状況の詳細が表示されます。
   | 「実行種別」には、ドライランの場合は「ドライラン」、それ以外は「通常」が表示されます。
   | ステータスが想定外エラーで終了した場合、Webコンテンツの登録不備が原因であれば、エラーログにメッセージが表示されます。
   | また、「 :ref:`ansible_pioneer_interface_information` 」の登録不備等で、Ansible RestAPIとの通信に失敗した場合にはエラーログにメッセージが表示されません。この場合は、アプリケーションログにエラー情報が記録されます。必要に応じてアプリケーションログを確認ください。
   | Conductorから実行した場合に、「呼出元Conductor」には、どのConductorから実行されたかを表示します。
   | Ansible-Pioneerドライバから直接実行した場合は空欄になります。
   | 「実行ユーザ」には、作業実行メニューより「実行」ボタンまたは「ドライラン」ボタンを押下した際のログインユーザが表示されます。

#. | **作業対象ホスト確認**
   | :guilabel:`作業対象ホスト確認` ボタンで「 :ref:`ansible_pioneer_target_host` 」が表示され、作業対象のオペレーションとMovementに絞り込んだホストが表示されます。

#. | **代入値確認**
   | :guilabel:`代入値確認` ボタンで「 :ref:`ansible_pioneer_substitution_value_list` 」が表示され、作業対象のオペレーションとMovementに絞り込んだ代入値が表示されます。

#. | **緊急停止/予約取り消し**
   | :guilabel:`緊急停止` ボタンで構築作業を停止させることができます。
   | また、実行前の「予約実行」の作業の場合は、 :guilabel:`予約取消` ボタンが表示されます。 :guilabel:`予約取消` ボタンで予約実行が取り消せます。

#. | **実行ログ表示**
   | Ansible Automation Controllerで実行した場合、構築対象機器の機器一覧のユーザー・パスワード・インスタンスグルーブなのどの項目値でグループ化された構築対象機器の単位でPlaybookが実行され、ansibleの実行ログが分割されます。
   | さらに、Movement一覧のオプションパラメータでジョブスライス数を指定することによりグループ化された構築対象機器をさらにジョブスライス数で分割しplaybookが実行され、ansibleの実行ログも分割されます。
   | 実行ログが分割された場合、表示ログファイルのプルダウンが表示され、表示したいログファイルを選択する事ができます。

   | 表示ログファイルのプルダウンに表示されるログファイル名は以下の2種類があります。
   | exec.log:　全ての実行ログをまとめたログファイルです。
   | exec.log以外: 分割された実行ログファイルです。ファイル命名規則は以下になります。
   | Ita_<mode名>_executions_jobtpl_<作業番号>_<グループ番号>_<通番>


   .. list-table:: 分割された実行ログファイルの命名要素
      :widths: 20 50
      :header-rows: 1
      :align: left
   
      * - 要素
        - 内容
      * - mode名
        - 実行したモード名 legacy_role 
      * - 作業番号 
        - 作業管理メニューの作業実行No 
      * - グループ番号
        - 構築対象機器の機器一覧のユーザー・パスワード・インスタンスグルーブなのどの項目値でグルーブ化した1からの通番です。
      * - 通番
        - | ジョブスライス数の設定によりグループ内を分割した1からの通番です。 
          | 0の場合はジョブスライス数による分割がなかったことのを表します。 

#. | **ログ検索**
   | 実行ログ、エラーログは、フィルタリングができます。各ログのフィルタのテキストボックスに検索したい文字列を入力し、「該当行のみ表示」のチェックボックスをチェックすることで該当する行だけが表示されます。
   | 実行ログ、エラーログのリフレッシュ表示間隔と最大表示行数を、「 :ref:`ansible_pioneer_interface_information` 」の「状態監視周期（単位ミリ秒）」と「進行状態表示行数」で設定できます。

#. | **投入データ**
   | 実行したPlaybookなどをダウンロードすることができます。
   | 投入データの構成は「 :ref:`ansible_pioneer_the_linkage_between_the_input_data_used_during_ansible_execution_and_ita_menu` 」を参照してください。

#. | **結果データ**
   | 実行ログ、エラーログなどをダウンロードすることができます。

.. _ansible_pioneer_execution_list:

作業管理
~~~~~~~~

| 作業の履歴を閲覧できます。
| 条件を指定し :guilabel:`フィルタ` ボタンをクリックすると、作業一覧テーブルを表示します。
| :guilabel:`詳細` ボタンで :ref:`ansible_pioneer_check_operation_status` に遷移し、実行状態の詳細を見ることができます。

.. figure:: /images/ja/ansible-legacyrole/work_management/execution_list.png
   :width: 800px
   :alt: サブメニュー画面（作業管理）


   サブメニュー画面（作業管理）



.. _ansible_pioneer_target_host:

作業対象ホスト
~~~~~~~~~~~~~~

#. | :menuselection:`Ansible-Pioneer-->作業対象ホスト` では、オペレーションに紐付くMovementおよびホストを閲覧できます。

   .. figure:: /images/ja/ansible-legacyrole/work_taget_host/target_host.png
      :width: 800px
      :alt: サブメニュー画面（作業対象ホスト）

      サブメニュー画面（作業対象ホスト）


#. | 閲覧画面の項目一覧は以下のとおりです。
   

   .. list-table:: 閲覧画面項目一覧（作業対象ホスト）
      :widths: 45 120 
      :header-rows: 1
      :align: left
   
      * - 項目
        - 説明
      * - 作業No
        - 作業実行時に自動採番した36桁の文字列が表示されます。
      * - オペレーション
        - オペレーション一覧に登録されているオペレーションが表示されます。
      * - Movement名
        - Movement一覧に登録されているMovementが表示されます。
      * - ホスト名
        - 機器一覧に登録されているホスト名が表示されます。 
      * - 備考  
        - 自由記述欄です。 


.. _ansible_pioneer_substitution_value_list:

代入値管理
~~~~~~~~~~~~~~

#. | オペレーションに紐付くMovementで利用されるRole内の変数に代入する具体値を閲覧できます。


   .. figure:: /images/ja/ansible-legacyrole/assigned_value_management/substitution_value_list.png
      :width: 800px
      :alt: サブメニュー画面（代入値管理）

      サブメニュー画面（代入値管理）


#. | 閲覧画面の項目一覧は以下のとおりです。

   .. table:: 閲覧画面項目一覧（代入値管理）
      :align: left

      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      | 項目                                      | 説明                                                                                                        | 
      +============+===========+==================+=============================================================================================================+
      | 作業No                                    | 作業実行時に自動採番した36桁の文字列が表示されます。                                                        |
      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      | オペレーション                            | 作業対象ホストに登録されているオペレーションが表示されます。                                                |
      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      | Movement名                                | 作業対象ホストに登録されているデータの中から、選択されたオペレーションに紐づくMovementが表示されます。      |
      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      | ホスト名                                  | 作業対象ホストに登録されているデータで選択されたオペレーションとMovementに紐づくホストが表示されます。      |
      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      | Movement名:変数名                         | Movement-ロール紐付に登録されている資材の中から、選択されたMovementにアタッチしている変数名が表示されます。 |
      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      | Movement名:変数名:メンバー変数            | 変数名で多段変数を選択した場合に多段変数のメンバー変数が表示されます。                                      | 
      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      | 具体値     | 文字列    | Sensitive設定    | 「OFF」または「ON」が表示されます。                                                                         |
      |            |           |                  |                                                                                                             |
      |            |           |                  | Ansibleに渡すホスト変数ファイルには、ansible-vaultで暗号化された内容が設定されます。                        |
      |            |           +------------------+-------------------------------------------------------------------------------------------------------------+
      |            |           | 値               | オペレーション/Movement/ホストで使用する変数の具体値が表示されます。                                        |
      |            |           |                  |                                                                                                             |
      |            |           |                  | 代入値自動登録設定でファイル埋込変数とテンプレート埋込変数をPlaybookの変数に紐付した場合、\                 |
      |            |           |                  | 具体値には '{{ CPF_xxxx }}' '{{ TPF_xxxx }}'が表示されます。                                                |
      |            +-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      |            | ファイル                     | オペレーション/Movement/ホストで使用する変数にファイルを埋込む場合に、埋込むファイルがアップロードされます。|
      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      | 代入順序                                  | 複数具体値が設定できる変数の場合のみ表示されます。                                                          |
      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+
      | 備考                                      | 自由記述欄です。                                                                                            |
      +------------+-----------+------------------+-------------------------------------------------------------------------------------------------------------+


構築コード記述方法
==================

.. _ansible_pioneer_write_dialog_file_ansible_pioneer:

対話ファイル（Ansible-Pioneer）の記述
---------------------------------------

| Ansible-Pioneerでは、ITA独自モジュールをAnsibleに組込んでいます。
| 対話ファイルはITA独自書式となります。

.. warning:: | 文字コードは、UTF-8のBOMなしで作成してください。
   | 対話ファイルはYAML形式のファイルとして扱います。YAML形式に準じていない記述があると、対話ファイルのアップロード時や作業実行時にエラーとなります。詳しくは、本章の「 :ref:`ansible_pioneer_things_to_keep_in_mind_when_writing_dialogue_files_in_yaml_format` 」を参照してください。

対話ファイルの構成
~~~~~~~~~~~~~~~~~~
| 対話ファイルは2種類のセクションにより構成されます。

.. table:: 
   :align: Left
    
   +------------------+------------------------------------------------------+
   | セクション名     | 用途                                                 |
   +==================+======================================================+
   | conf             | timeoutパラメータによりタイムアウト値を指定します。  |
   |                  |                                                      |
   |                  | タイムアウト値:1～3600(単位:秒)                      |
   +------------------+------------------------------------------------------+
   | exe_list         | 4種\                                                 |
   |                  | の対話コマンドにより作業対象ホストの構築を行います。 |
   +------------------+------------------------------------------------------+
    
| 以降に対話コマンドを記述します。
| 例1-1)
    
.. code-block:: yaml
                                                             
   # コメント                                                         
   conf:                                                            
     timeout: 10                                                    
   exec_list:   


.. tip:: | 対話ファイルの先頭にtimeoutパラメータを記述します。   
 | コメントはAnsibleの基本書式と同様の記述が出来ます。

対話コマンド
~~~~~~~~~~~~
| 対話コマンドは以下の5種類があります。

.. table::
  :align: Left

  +---------------------+------------------------------------------------------+
  | モジュール          | 用途                                                 |
  +=====================+======================================================+
  | exec                | 作業対象ホストにコマンドを投入します。               |
  +---------------------+------------------------------------------------------+
  | expect              | 作業対象ホストが標準出力に出力する内容よ\            |
  |                     | り、期待する文字列(プロンプト)の出力を待ち合せます。 |
  +---------------------+------------------------------------------------------+
  | state               | 作業対象ホストにコ\                                  |
  |                     | マンドを投入し、標準出力にプロンプトを出力するまでの |
  |                     | 標準出力の内容を外部Shellで解析し結果判定をします。  |
  +---------------------+------------------------------------------------------+
  | command             | 作業対象ホストにコマンドを投入する前\                |
  |                     | 後において、繰り返しや条件分岐を行うことができます。 |
  +---------------------+------------------------------------------------------+
  | localaction         | Ansible/Ansible Automation\                          |
  |                     | Controllerサーバ上でコマンドを実行します。           |
  +---------------------+------------------------------------------------------+

①expectモジュール
*******************

| 作業対象ホストが標準出力に出力する内容より、期待する文字列(プロンプト)の出力を待ち合せます。期待する文字列を正規表記で記述できます。
| 期待する文字列を受取ると次へ進みます。また、timeoutパラメータで指定された時間内に受取れない場合は対話ファイルを異常終了します。
| 例2-1)

.. code-block:: yaml

   # telnet接続でパスワード入力のプロンプトを待ち合せます。
     - expect: 'Password'   
                                                 
      
.. note:: | 待ち合わせる文字列をコーテーションで囲むことを推奨します。   

②execモジュール
*******************

| 作業対象ホストにコマンドを投入します。
| execモジュールとexpectモジュールは対で使用します。
| 例2-2)

.. code-block:: yaml

   # telnet接続でパスワード入力のプロンプトを待ち合せてパスワードを投入します。   
     - expect: 'Password'                                                              
       exec: itapassword                                                               
            
         
.. note:: | 必要に応じコーテーションで囲むことを推奨します。   

③stateモジュール
*******************

| 作業対象ホストにコマンドを投入し、標準出力にプロンプトを出力するまでの標準出力の内容を外部Shellで解析し結果判定をします。

.. table:: stateモジュールの書式
   :align: Left

   +----------------------+------------+----------------------------------------------------------------------------------+
   | パラメータ　         | 必須/任意  | 説明　                                                                           |
   +======================+============+==================================================================================+
   | state                | 必須       | 投入するコマンドを指定します。                                                   |
   |                      |            |                                                                                  |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | prompt               | 必須       | 待受けプロンプトを指定します。正規表記で記述できます。                           |
   |                      |            |                                                                                  |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | shell                | 任意       | 作成したshellで結果を確認する場合に、shellファイル名を指定します。               |
   |                      |            |                                                                                  |
   |                      |            | 作成したshellのexitコードが0の場合は正常、他は異常と判定します。                 |  
   |                      |            |                                                                                  |
   |                      |            | デフォルトのshellで結果を確認する場合、本パラメータは不要となります。            |
   |                      |            |                                                                                  |
   |                      |            | デフォルトのshellはparameter(-)で指定された文字列で標準出力の内容をgrepします。  |
   |                      |            |                                                                                  |
   |                      |            | マッチする行が1行でもあれば正常とし、マッチする行がなければ異常と判定します。    |
   |                      |            |                                                                                  |
   |                      |            | また、parameterを指定しなかった場合、異常と判定されます。                        |
   |                      |            |                                                                                  |
   |                      |            | コマンドの結果(標準出力)をstdout_fileで指定したファイルに退避したい目的で使用す\ |
   |                      |            | る場合、ignore_errorsで「yes」を指定してください。                                 |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | parameter            | 任意       | 投入するコマンドの結果(標準出力)を検索する文字列を指定します。                   |
   |                      |            |                                                                                  |
   |                      |            | shellを指定している場合、作成したshellの実行時パラメータとなります。複数ある場合\|
   |                      |            | は検索文字列を列挙します。                                                       |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | stdout_file          | 任意       | 投入するコマンドの結果(標準出力)を退避するファイルです。                         |
   |                      |            |                                                                                  |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | success_exit         | 任意       | 検索結果が正常の場合で対話ファイルを正常終了する場合に「yes」を指定します。      |
   |                      |            |                                                                                  |
   |                      |            | 「no」の場合は正常の場合は次に進みます。                                         |
   |                      |            |                                                                                  |
   |                      |            | デフォルトは「no」。                                                             |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | ignore_errors        | 任意       | 検索結果が異常でも次に進む場合に「yes」を指定します。                            |
   |                      |            |                                                                                  |
   |                      |            | 「no」の場合は、異常の場合に対話ファイルを異常終了とします。                     |
   |                      |            |                                                                                  |
   |                      |            | デフォルトは「no」。                                                             |
   +----------------------+------------+----------------------------------------------------------------------------------+
        
| 例2-3)

.. code-block:: yaml

   # hostsファイルをcatし、表示結果をparameter値でgrepしている。139.0.0.1、lalhostを含む行があれば正常と判定し次に進みます。
   # 行がなければ異常と判定し対話ファイルを異常終了します。
   exec_list:
     - state: 'cat /etc/hosts'
       prompt: 'root@{{ __loginhostname__ }}'
       parameter: 
         - '139.0.0.1'
         - 'lalhost'
     - expect: root@{{ __loginhostname__ }}
       exec: exit

| 例2-4) 

.. code-block:: yaml

   # hostsファイルをcatし、表示結果をparameter値でgrepしている。
   # 139.0.0.1、lalhostを含む行があれば正常と判定しますがsuccess_exit: yesの設定により対話ファイルを正常終了します。
   # 行がなければ異常と判定し対話ファイルを異常終了します。                                     
      
   exec_list:                                                                                
     - state: 'cat /etc/hosts'                                                                 
       prompt: 'root@{{ __loginhostname__ }}'                                                   
       parameter:                                                                               
         - '139.0.0.1'                                                                            
         - 'lalhost'                                                                              
       success_exit: yes                                                                        
     - expect: root@{{ __loginhostname__ }}                                                   
       exec: exit                                                                               


| 例2-5) 

.. code-block:: yaml

   # hostsファイルをcatし、表示結果をparameter値でgrepしている。139.0.0.1、lalhostを含む
   # 139.0.0.1、lalhostを含む行があれば正常と判定し次に進みます。
   # 行がなければ異常と判定しますがignore_errors: yesの設定により次に進みます。                                                      
      
   exec_list:                                                                           
     - state: 'cat /etc/hosts'                                                            
       prompt: 'root@{{ __loginhostname__ }}'                                              
       parameter:                                                                          
         - '139.0.0.1'                                                                       
         - 'lalhost'                                                                         
       ignore_errors: yes                                                                  
     - expect: root@{{ __loginhostname__ }}                                              
       exec: exit                                                                          
     

| 例2-6) 

.. code-block:: yaml

   # hostsファイルをcatし、ユーザー作成のshellで表示結果をparameter値でgrepしている。
   # 139.0.0.1、lalhostを含む行があれば正常と判定し次に進みます。 
   # 行がなければ異常と判定し対話ファイルを異常終了します。  

   exec_list:                                          
     - state: 'cat /etc/hosts'
       prompt: 'root@{{ __loginhostname__ }}'
       shell: '/tmp/grep.sh'
       stdout_file: '/tmp/stdout.txt'
       parameter: 
         - '139.0.0.1'
         - 'lalhost'  
     - expect: root@{{ __loginhostname__ }}
       exec: exit

   # ユーザー作成 shell(/tmp/grep.sh)
   #!/bin/bash

   STDOUT=/tmp/STDOUT.tmp
   STDERR=/tmp/STDERR.tmp
   cat /tmp/stdout.txt|grep $1|grep $2 | wc -l >${STDOUT} 2>${STDERR}
   RET=$?
   if [ $RET -ne 0 ]; then
       EXIT_CODE=$RET
   else
       if [ -s ${STDERR} ]; then
           EXIT_CODE=1
       else
           CNT=`cat ${STDOUT}`
           if [ ${CNT} -eq 0 ]; then
               EXIT_CODE=1
           else
               EXIT_CODE=0
           fi
       fi
   fi


| 例2-7)

.. code-block:: yaml

   # hostsファイルをcatし、表示結果をstdout_file で指定したファイルに保存し次に進みます。
   # デフォルトのshellはparameterの設定がないと異常と判定します。次に進める為にignore_errors: yesを設定します。
   exec_list:
     - state: 'cat /etc/hosts'
       prompt: 'root@{{ __loginhostname__ }}'
       stdout_file: '{{ __symphony_workflowdir__ }}/hosts'
       ignore_errors: yes
     - expect: root@{{ __loginhostname__ }}
       exec: exit

④commandモジュール
********************

| 作業対象ホストにコマンドを投入する前後において、繰り返しや条件分岐を行うことができます。
| commandモジュールの書式

.. table::
   :align: Left

   +----------------------+------------+----------------------------------------------------------------------------------+
   | パラメータ　         | 必須/任意  | 説明　                                                                           |
   +======================+============+==================================================================================+
   | command              | 必須       | 投入するコマンドを指定します。                                                   |
   |                      |            |                                                                                  |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | prompt               | 必須       | 待受けプロンプトを指定します。正規表記で記述できます。                           |
   |                      |            |                                                                                  |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | timeout              | 任意       | コマンドを送ってからのプロンプト待ちタイマを指定します。                         |
   |                      |            |                                                                                  |
   |                      |            | 省略されている場合は、conf->timeoutを使用します。                                |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | register             | 任意       | コマンドを送信後に標準出力の情報を設定する変数「任意の文字列」を指定します。     |
   |                      |            |                                                                                  |
   |                      |            | with_itemsでループしている場合は、最後のコマンド送信後の標準出力の情報が設定され\|
   |                      |            | ます。                                                                           |
   |                      |            |                                                                                  |
   |                      |            | 設定した変数はcommandモジュールの条件判定(when・exec_when・failed_when)でのみ使\ |
   |                      |            | 用できます。                                                                     |
   |                      |            |                                                                                  |
   |                      |            | 設定した変数は、1つのみ保持できます。次にregisterで別の変数に値を設定した場合、\ |
   |                      |            | 前に設定した変数は削除されます。                                                 |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | with_items           | 任意       | with_itemsにコマンドをループして投入する場合にに複数具体値変数の変数名を設定し\  |
   |                      |            | ます。各変数のスコープはitem.X(Xは0から99)とします。                             |
   |                      |            |                                                                                  |
   |                      |            | prompt、timeoutでwith_itemsを利用する場合の変数名は下記の通りにしてください。    |
   |                      |            |                                                                                  |
   |                      |            | prompt: {{ VAR_prompt_XXX }}                                                     |
   |                      |            |                                                                                  |
   |                      |            | timeout: {{ VAR_timeout_XXX }}                                                   |
   |                      |            |                                                                                  |
   |                      |            | (XXXは任意の半角英数字とアンダースコア)                                          |
   |                      |            |                                                                                  |
   |                      |            | with_itemsに設定する各変数の具体値数が同じでない場合、各変数の具体値数の最大値数\|
   |                      |            | でループします。具体値が不足している変数の具体値は空として扱います。             |
   |                      |            |                                                                                  |
   |                      |            | また、promptやtimeoutでwith_itemsを利用する場合、具体値数に注意が必要です。      |
   |                      |            |                                                                                  |
   |                      |            | prompt→command→prompt→command→prompt・・・(以下ループ)となり、command数+1の\     |
   |                      |            | 具体値を設定する必要があります。(timeoutも同様)                                  |
   |                      |            |                                                                                  |
   |                      |            | prompt、timeout の変数の具体値数が不足していると、作業実行時にエラーになります。 |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | when                 | 任意       | command実行前の条件判定です。                                                    |
   |                      |            |                                                                                  |
   |                      |            | 条件にマッチしてcommand実行します。                                              |
   |                      |            |                                                                                  |
   |                      |            | 条件にマッチしていなければ次のcommand行に移ります。                              |
   |                      |            |                                                                                  |
   |                      |            | 条件式                                                                           |
   |                      |            |                                                                                  |
   |                      |            | 　変数定義判定                                                                   |
   |                      |            |                                                                                  |
   |                      |            | 　VAR_xx is define　　　変数が定義されている　　true                             |
   |                      |            |                                                                                  |
   |                      |            | 　VAR_xx is undefine　　変数が未定義　　　　　　true                             |
   |                      |            |                                                                                  |
   |                      |            | 　Exp）                                                                          |
   |                      |            |                                                                                  |
   |                      |            | 　　- 'VAR_status is define'                                                     |
   |                      |            |                                                                                  |
   |                      |            | 　　- 'VAR_status is undefine'                                                   |
   |                      |            |                                                                                  |
   |                      |            | ※define/undefineはITAの変数(VAR_xx)のみ指定可能                                  |
   |                      |            |                                                                                  |
   |                      |            | 変数具体値判定                                                                   |
   |                      |            |                                                                                  |
   |                      |            | VAR_xx/register変数　比較演算子　文字列                                          |
   |                      |            |                                                                                  |
   |                      |            | VAR_xx/register変数　比較演算子　VAR_xx                                          |
   |                      |            |                                                                                  |
   |                      |            | VAR_xx/register変数　match(正規表記文字列/VAR_xx)                                |
   |                      |            |                                                                                  |
   |                      |            | VAR_xx/register変数　no match(正規表記文字列/VAR_xx)                             |
   |                      |            |                                                                                  |
   |                      |            | ※比較演算子は「==」、「!=」、「>」、「>=」、「<」、「<=」                        |
   |                      |            |                                                                                  |
   |                      |            | ※比較演算子の「>」、「>=」、「<」、「<=」は数値を想定しています。                |
   |                      |            |                                                                                  |
   |                      |            | 　Exp）                                                                          |
   |                      |            |                                                                                  |
   |                      |            | 　　- '{{ VAR_status }} match(active)'                                           |
   |                      |            |                                                                                  |
   |                      |            | 　　- '{{ VAR_status }} == active'                                               |
   |                      |            |                                                                                  |
   |                      |            | 　　- 'register変数match(active)'                                                |
   |                      |            |                                                                                  |
   |                      |            | 　※activeなどの条件判定する文字列をクォーテーションで囲む必要はありません。      |
   |                      |            |                                                                                  |
   |                      |            | and/orによる複合条件                                                             |
   |                      |            |                                                                                  |
   |                      |            | 　or条件を行いたい場合、判定条件の間にORを記述します。                           |
   |                      |            |                                                                                  |
   |                      |            | 　Exp）                                                                          |
   |                      |            |                                                                                  |
   |                      |            | 　　- '{{ VAR_status }} == 1　OR {{ VAR_status }} == 2'                          |
   |                      |            |                                                                                  |
   |                      |            | 　and条件を行いたい場合、複数行に分けて記述するとand条件になります。             |
   |                      |            |                                                                                  |
   |                      |            | 　Exp）                                                                          |
   |                      |            |                                                                                  |
   |                      |            | 　　- '{{ VAR_status }} == 1　OR {{ VAR_status }} == 2'                          |
   |                      |            |                                                                                  |
   |                      |            | 　　- '{{ VAR_sub_status }} == 1'                                                |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | exec_when            | 任意       | ループ毎の条件判定です。(continue条件)                                           |
   |                      |            |                                                                                  |
   |                      |            | with_itemsが記述されている場合に条件判定を行います。                             |
   |                      |            |                                                                                  |
   |                      |            | 条件にマッチしていれば該当ループのcommandを実行します。                          |
   |                      |            |                                                                                  |
   |                      |            | マッチしていなければ次のループへ移ります。                                       |
   |                      |            |                                                                                  |
   |                      |            | 条件式                                                                           |
   |                      |            |                                                                                  |
   |                      |            | 　when:と同様の記述が行えます。                                                  |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | failed_when          | 任意       | command実行後(ループ毎)のstdoutの内容に対する条件判定です。                      |
   |                      |            |                                                                                  |
   |                      |            | with_itemsが記述されている場合に条件判定を行います。                             |
   |                      |            |                                                                                  |
   |                      |            | 条件にマッチしていれば正常とします。                                             |
   |                      |            |                                                                                  |
   |                      |            | マッチしていなければ異常とし、対話ファイルを異常終了させます。                   |
   |                      |            |                                                                                  |
   |                      |            | 条件式                                                                           |
   |                      |            |                                                                                  |
   |                      |            | 　変数具体値判定                                                                 |
   |                      |            |                                                                                  |
   |                      |            | 　stdout 比較演算子 文字列                                                       |
   +----------------------+------------+----------------------------------------------------------------------------------+


| registerパラメータの有効範囲

.. code-block:: yaml

   exec_list:
     - expect: 'assword:'
       exec: '{{ __loginpassword__ }}'
     - command: 'systemctl status httpd'
       prompt: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
       register: httpd_status_register
     - command: 'systemctl restart httpd'
       when:
         - httpd_status_register no match(running)
       prompt: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
     - command: 'systemctl status mysql'
       prompt: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
       register: mysql_status_register
     - command: 'systemctl restart mysql'
       when:
         - mysql_status_register no match(running)
       prompt: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
     - expect: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
       exec: exit

.. tip:: | 6行目のhttpd_status_registerは、11行目のcommandモジュール内のregisterで別の変数(mysql_status_register)に値を設定している為、10行目までが有効範囲となります。


例)　with_itemsで定義した変数はregister/when以外でitem.Xでスコープすることが出来ます。

.. code-block:: yaml
      
   with_items:
      - '{{ VAR_item1 }}'   #item.0
      - '{{ VAR_item2 }}'   #item.1
   exec_when:
      - '{{ item.0 }} == active'
      - '{{ item.0 }} == {{ VAR_status }}'
      - 'register変数 match({{ item.0 }})'
   failed_when:
      - 'stdout match({{ item.1 }})'

| 例）commandモジュールで、下記コマンドを実行したい場合
|  ・systemctl start httpd
|  ・systemctl start mysql

| 対話ファイルの記述とwith_itemsで使用する変数の具体値は以下の様になります。

| ▼対話ファイルの記述内容

.. code-block:: yaml

   - command: "systemctl  {{ item.0 }}  {{ item.1 }}"
     prompt: '{{ item.2 }}'
     timeout: '{{ item.3 }}'
     with_items:
        - '{{ VAR_status_list }}'    # item.0
        - '{{ VAR_service_list }}'   # item.1
        - '{{ VAR_prompt_list }}'    # item.2
        - '{{ VAR_timeout_list }}'   # item.3

| ▼with_itemsで使用する変数の具体値

| 　VAR_status_list:　　　　　 VAR_service_list:
| 　- start　　　　　　　　　　- httpd                   
| 　- start　　　　　　　　　　- mysql
| 　VAR_prompt_list:　　　　　 VAR_timeout_list:
| 　 - コマンドプロンプト　　　 - 10
| 　 - コマンドプロンプト　　　 - 10
| 　 - コマンドプロンプト　　　 - 10


| 例3-1)

.. code-block:: yaml

  conf:
    timeout: 30

  exec_list:
  # プロンプト以外の文字列で待合せが必要な場合は、expect/execの組合せでする。
  # パスワードが必要な場合
    - expect: 'password:'
      exec:   '{{ __loginpassword__ }}'

  # VAR_hosts_makeというITA変数がホスト変数ファイルに記載されている場合、
  # hostsファイルをcatします。記載されていない場合は、スキップします。
    - command: cat /etc/hosts
      prompt: root@{{ __loginhostname__ }}
      when: 
        - VAR_hosts_make is define
    - expect: root@{{ __loginhostname__ }}
      exec: exit


| 例3-2)

.. code-block:: yaml

   conf:
     timeout: 30

   exec_list:
   # プロンプト以外の文字列で待合せが必要な場合は、expect/execの組合せでする。
   # パスワードが必要な場合
     - expect: 'password:'
       exec:   '{{ __loginpassword__ }}'

   # VAR_hosts_makeというITA変数がホスト変数ファイルに記載されている場合、
   # hostsファイルをcatします。記載されていない場合は、スキップします。
   # catにより、標準出力されたhostsファイルの内容をresult_stdoutに退避します。
     - command: cat /etc/hosts
       prompt: root@{{ __loginhostname__ }}
       register: result_stdout
       when: 
         - VAR_hosts_make is define

   # VAR_hosts_makeというITA変数がホスト変数ファイルに記載されている場合、
   # command実行します。記載されていない場合は、スキップします。
   # with_itemsの複数具体値変数に設定されている具体値数分command実行します。
   # ループ毎の条件判定として、hostsファイルに「ipアドレス ホスト名」が該当しない場合
   # command実行します。
   # hostsファイルの最終行にechoによる、「IPアドレス ホスト名」を追記します。

     - command: 'echo {{ item.0 }}  {{ item.1 }} >> /etc/hosts'
       prompt: 'root@{{ __loginhostname__ }}'
       when: 
         - VAR_hosts_make is define
       with_items:
         - '{{ VAR_hosts_ip }}'      # item.0
         - '{{ VAR_hosts_name }}'   # item.1
       exec_when:
         - result_stdout no match({{ item.0 }} *{{ item.1 }})

     - expect: root@{{ __loginhostname__ }}
       exec: exit


| 例3-3)

.. code-block:: yaml

   conf:
     timeout: 30

   exec_list:
   # プロンプト以外の文字列で待合せが必要な場合は、expect/execの組合せでする。
   # パスワードが必要な場合
     - expect: 'password:'
       exec:   '{{ __loginpassword__ }}'

   # with_itemsの複数具体値変数に設定されている具体値数分command実行します。
   # 自動起動設定を実行します。
     - command: 'systemctl enable {{ item.0 }}'
       prompt: 'root@{{ __loginhostname__ }}'
       with_items:
         - '{{ VAR_service_name_list }}'  # item.0

   # with_itemsの複数具体値変数に設定されている具体値数分command実行します。
   # サービスの起動を実行します。
     - command: 'systemctl start {{ item.0 }}'
       prompt: 'root@{{ __loginhostname__ }}'
       with_items:
         - '{{ VAR_service_name_list }}'  # item.0

   # with_itemsの複数具体値変数に設定されている具体値数分command実行します。
   # サービスのステータスを標準出力します。
   # 標準出力された結果の内容に、item.1の正規表現がある場合、正となります。
   # 例えば、VAR_service_status_listの具体値をrunningと設定し、サービスが起動している場合、
   # 「Active: active (running)」のrunnigが一致するので正となります。(次のループに移ります)
   # そうでない場合は、異常と判断し、対話ファイルは異常終了となります。
     - command: 'systemctl status {{ item.0 }}'
       prompt: 'root@{{ __loginhostname__ }}'
       with_items:
         - '{{ VAR_service_name_list }}'  # item.0
         - '{{ VAR_service_status_list }}'  # item.1
       failed_when:
         - stdout match({{ item.1 }})

     - expect: root@{{ __loginhostname__ }}
       exec: exit


| 例3-4)

.. code-block:: yaml

   conf:
     timeout: 30
   exec_list:
   # プロンプト以外の文字列で待合せが必要な場合は、expect/execの組合せでする。
   # パスワードが必要な場合
     - expect: 'password:'
       exec:   '{{ __loginpassword__ }}'

   # with_itemsの複数具体値変数に設定されている具体値数分command実行します。
   # commandに「{{ item.0 }}」のみの記述をする場合は、ダブルクォーテーションで囲みます。
   # promptやtimeoutでwith_itemsを利用する場合、具体値数に注意が必要です。
   # prompt→command→prompt→command→prompt ・・・(以下ループ)となり、command数+1
   # 設定する必要があります。(timeoutも同様)
     - command: "{{ item.0 }}"
       prompt: '{{ item.1 }}'
       timeout: '{{ item.2 }}'
       with_items:
         - '{{ VAR_command_list }}'  # item.0
         - '{{ VAR_prompt_list }}'    # item.1
         - '{{ VAR_timeout_list }}'    # item.2
     - expect: root@{{ __loginhostname__ }}
       exec: exit

| 例3-5)

.. code-block:: yaml

   conf:
     timeout: 30

   exec_list:
   # プロンプト以外の文字列で待合せが必要な場合は、expect/execの組合せでする。
   # パスワードが必要な場合
     - expect: 'password:'
       exec:   '{{ __loginpassword__ }}'

   # with_itemsの複数具体値変数に設定されている具体値数分command実行します。
   # 代入値管理の具体値に{{ item.X }} を設定することができます。その際は対話ファイルに記載する
   # item.Xより具体値に記載するitem.Xの数値が大きくなるようにしてください。
   # 今回の例で実行するcommandは「systemctl status ky_pioneer_execute-workflow.service」
     - command: "{{ item.0 }}"
       prompt: 'root@{{ __loginhostname__ }}'
       with_items:
         - '{{ VAR_command_list }}'      # item.0
         - '{{ VAR_service_name_list }}'  # item.1

     - expect: root@{{ __loginhostname__ }}
       exec: exit
      
| ※ VAR_command_list      ・・・ systemctl status {{ item.1 }}
| ※ VAR_service_name_list ・・・ ky_pioneer_execute-workflow.service

| 例3-6)

.. code-block:: yaml

   conf:
     timeout: 30

   exec_list:
   # プロンプト以外の文字列で待合せが必要な場合は、expect/execの組合せでする。
   # パスワードが必要な場合
     - expect: 'password:'
       exec:   '{{ __loginpassword__ }}'

   # and/orによる複合条件の記述例です。
   # or条件を行いたい場合、if文を横に記述することができます。
   # and条件を行いたい場合、複数行に分けて記述するとand条件になります。
   # 今回、whenを例にしていますが、exec_when、failed_whenも同様です。
     - command: echo aaa
       prompt: 'root@{{ __loginhostname__ }}'
       when:
         - 10 == 9 OR 10 != 9 OR 10 >= 9
         - 10 > 9 OR 10 <= 9 OR 10 < 9

     - expect: root@{{ __loginhostname__ }}
       exec: exit

              
⑤localactionモジュール
************************

| Ansible/Ansible Automation Controllerサーバ上でコマンドを実行します。
| localactionモジュールの書式

.. table::
   :align: Left

   +----------------------+------------+----------------------------------------------------------------------------------+
   | パラメータ　         | 必須/任意  | 説明　                                                                           |
   +======================+============+==================================================================================+
   | localaction          | 必須       | 実行するコマンドを指定します。                                                   |
   |                      |            |                                                                                  |
   |                      |            | confセクションのtimeoutパラメータでのタイマ監視は適用外です。                    |
   |                      |            |                                                                                  |
   |                      |            | コマンドが完了するまで次のステップに進みません。                                 |
   +----------------------+------------+----------------------------------------------------------------------------------+
   | ignore_errors        | 任意       | コマンドの実行結果が異常でも次に進む場合に「yes」を指定します。                  |
   |                      |            |                                                                                  |
   |                      |            | 「no」の場合は、異常の場合に対話ファイルを異常終了します。                       |
   |                      |            |                                                                                  |
   |                      |            | デフォルトは「no」。                                                             |
   +----------------------+------------+----------------------------------------------------------------------------------+

| 例4-1)

.. code-block:: yaml
            
  # Symphony実行時の各Movementで共有するディレクトリ({{ __symphony_workflowdir__ }})にホスト毎のディレクトリを設けて、hostsファイルを退避します。
     
  exec_list:
    - localaction: mkdir -p 755 {{ __symphony_workflowdir__ }}/{{ __loginhostname__ }}
      ignore_errors: yes
    - state: cat /etc/hosts
      prompt: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
      stdout_file: '{{ __symphony_workflowdir__ }}/{{ __loginhostname__ }}/hosts'
      ignore_errors: yes
    - expect: root@{{ __loginhostname__ }}
      exec: exit

正規表記
~~~~~~~~~

| 下記のコマンド及びパラメータに記述された文字列は正規表記で評価されます。
-  expectモジュール
-  stateモジュールのpromptパラメータ
-  commandモジュールのpromptパラメータ
| 正規表記で記述した文字列にメタ文字「(){}.など」を含む場合、メタ文字の前にエスケープ文字「\\」を挿入する必要があります。
      
| 正しい例)

.. code-block:: yaml

   XAMPP Developer Files ¥[Y¥/n¥] exec_list:  

| 誤った例)

.. code-block:: yaml

   XAMPP Developer Files [Y/n] exec_list:

| stateモジュールとcommandモジュールは、実行したコマンドの結果（標準出力）の取り出しを行っています。取り出す上での留意事項を以下に記述します。

#. | 実行したコマンドの結果（標準出力）とプロンプトの区切り
   | 実行したコマンドの結果（標準出力）とプロンプトの区切りをpromptパラメータで指定された文字列で行います。実行したコマンドの結果（標準出力）の判定やファイルへの保存を行う場合は、正規表記で .*付の後方一致は記述しないでください。実行したコマンドの結果（標準出力）が取り出せません。
   |
   | .* 付の後方一致の正規表記の例
   | '\ **.\***\ [\\#\\$\\%] $''
   |
#. | エスケープシーケンスの対応
   | 構築対象機器に依存しますが、構築対象機器から送られてくるプロンプトの直前にOperating
   | System Commandシーケンスが付加されている場合があります。promptパラメータで指定された文字列の直前にあるエスケープシーケンスを排除しています。

複数具体値変数使用時の注意事項
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| 対話ファイルで複数具体値変数が使用出来るパラメータは、commandモジュールのwith_itemsパラメータのみです。これ以外で使用した場合、作業実行時にエラーとなります。

コマンドプロンプト以外のプロンプトを処理する場合の注意事項
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| コマンドプロンプト以外のプロンプトを処理する場合、execモジュールとexpectモジュールの組合せで対話ファイルを作成してください。commandとstateモジュールでは処理できません。

| 例) 

.. code-block:: yaml

   # ssh-keygenを対話ファイルで処理する。

   conf:
     timeout: 10


   exec_list:
   # ssh接続　パスワード認証
     - expect: 'assword:'
       exec: '{{ __loginpassword__ }}'

   # ssh-keygenコマンド実行
     - expect: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
       exec: ssh-keygen
        
   # 以降がコマンドプロンプト以外のプロンプトに対する処理
   # 秘密鍵ファイルのパスを設定 
   # expectは正規表記で評価されるので、エスケープが必要なメタ文字にはエスケープ文字(\)を挿入する必要があります。
     - expect: 'id_rsa\):'
       exec: '{{ VAR_id_rsa_path }}'

   # パスフレーズを設定
     - expect: ' passphrase\):'
       exec: '{{ VAR_passphrase }}'

   # パスフレーズを確認
     - expect: ' passphrase again:'
       exec: '{{ VAR_passphrase }}'

   # 生成された 秘密鍵ファイルを確認
     - expect: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
       exec: 'ls -al {{ VAR_id_rsa_path }}'

   # ssh接続クローズ
     - expect: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
       exec: exit

| ※ VAR_id_rsa_path　・・・　秘密鍵ファイルのパスを設定します。
| ※ VAR_passphrase 　・・・　パスフレーズを設定します。
|
| ◎リターンしたい場合
| 変数使用の場合は具体値を空白(未入力)にします。
| 変数を使用していない場合は空文字列(コーテーションを2個並べます)を記載します。

.. code-block:: yaml

   exec: ''

対話ファイル終了時の注意事項
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| 対話ファイルの最後に、セッションを終了するコマンドを投入するようにしてください。
| 最終行のモジュールが終了するとセッションをクローズします。最終行にファイルコピーなど処理に時間がかかるコマンドが記載されている場合、コマンド終了前にセッションがクローズされコマンドが異常終了してしまう場合があります。

| 例)

.. code-block:: yaml

   conf:
     timeout: 10

   exec_list:
   # ssh接続　パスワード認証
     - expect: 'assword:'
       exec: '{{ __loginpassword__ }}'

   # ファイルコピー
     - expect: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
       exec: 'cp -rfp {{ VAR_src_path }} {{ VAR_dest_path }}'

   # 直前のコマンド終了をコマンドプロンプトで待ち合わせ、exitコマンドを投入する記載を対話ファイルの最後に挿入
     - expect: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
       exec: exit

.. _ansible_pioneer_things_to_keep_in_mind_when_writing_dialogue_files_in_yaml_format:

対話ファイルをyaml形式で記載する際の注意事項
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| 対話ファイルはyaml形式のファイルとして扱います。以下のようなYAML形式に準じていない記載があると対話モジュールのアップロード時や作業実行時にエラーとなります。

- | 各モジュールのパラメータに変数を記載している場合でパラメータ全体をクォーテーションで囲んでいない場合。
- | 各パラメータを定数のみで記載している場合で、定数の終端が「\ **:**\ 」の場合など、パラメータ全体をクォーテーションで囲んでいない場合。

| 各モジュールのパラメータは、パラメータ全体をクォーテーションで囲むことを推奨します。

| 正しい例）

.. code-block:: yaml

   - expect: 'assword:'
     exec:  '{{ __loginpassword__ }}'
   - expect: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
     exec: 'ls'
   - command: 'echo {{ item.0 }}'
     prompt: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
     exec_when:
       - '{{ item.1 }} == run'
     with_items:
       - '{{ VAR_echo }}' 
       - '{{ VAR_exec_when }}' 
       - '{{ VAR_failed_when }}' 
     failed_when:
       - stdout == match({{ item.2 }})
   - state: '{{ VAR_command }}'
     prompt: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
     parameter:
       - '{{ VAR_p1 }}' 
       - '{{ VAR_p2 }}' 
     success_exit: 'yes'

| 誤った例）

.. code-block:: yaml

   - expect: assword:
     exec:  {{ __loginpassword__ }}
   - expect: {{ __loginuser__ }}@{{ __loginhostname__ }}
     exec: ls
   - command: echo {{ item.0 }}
     prompt: {{ __loginuser__ }}@{{ __loginhostname__ }}
     exec_when:
       - {{ item.1 }} == run
     with_items:
       - {{ VAR_echo }}
       - {{ VAR_exec_when }}
       - {{ VAR_failed_when }}
     failed_when:
       - stdout == match({{ item.2 }})
   - state: {{ VAR_command }}
     prompt: {{ __loginuser__ }}@{{ __loginhostname__ }}
     parameter:
       - {{ VAR_p1 }}
       - {{ VAR_p2 }}
     success_exit: yes

      
構築対象機器のログインユーザーのLANGについての注意事項
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| ログインユーザーの「LANG」は、「UTF-8/euc/shift_jis」の3種類についてサポートしています。
| ログインユーザーの「LANG」の設定は機器一覧より行ってください。
| 「euc/shift_jis」を設定した場合、構築対象機器との通信制御で使用しているpexpectモジュールのUTF-8へのデコード処理の特性で対話ファイルを正しく処理出来ない場合があります。
- 一部の全角文字( ①②等)をUTF-8にデコード出来ません。デコード出来ない文字は??で表示されます。
- 一部の全角文字( － 等)をexpect等のプロンプト待ちで使用した場合、「LANG」がUTF-8では待ち受けが正しく出来ますが、LANGが「euc/shift_jis」では待ち受けがタイムアウトしてしまいます。

構築対象機器へ投入するコマンドの終端コードについての注意事項
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
構築対象機器へ投入するコマンドの終端コードは「LF」を送信します。構築対象機器のコマンド終端コードが「CRLF」の場合、対話ファイルで構築対象機器に投入するコマンドの末尾に「\r」を追加してください。

.. code-block:: yaml

   conf:
     timeout: 10
   exec_list:
     - expect: 'password:'
       exec: 'XXXXXXXX\r'
     - command: '{{ VAR_command }}\r'
       prompt: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
     - state: '{{ VAR_state }}\r'
       prompt: '{{ __loginuser__ }}@{{ __loginhostname__ }}'
       parameter:
        - '{{ VAR_parameter1 }}' 
        - '{{ VAR_parameter2 }}'

               
   
BackYardコンテンツ
------------------

変数自動登録
~~~~~~~~~~~~~

| 変数解析対象の資材をアップロードした場合、アップロードされた資材から変数を取出します。

.. list-table:: モード別アップロードした資材の変数の扱い
   :widths: 25 10 
   :header-rows: 1
   :align: left

   * - メニュー    
     - Ansible-Pioneer
   * - Playbook素材集 
     - ×
   * - ロールパッケージ管理
     - ×
   * - 対話ファイル素材集
     - ○


| なお、取出すタイミングは 自動プロセスの起動周期 に依存します。


   
付録
====

.. _ansible_pioneer_the_linkage_between_the_input_data_used_during_ansible_execution_and_ita_menu:

Ansible実行時に使用される投入データとITAメニューの紐づけ
--------------------------------------------------------
| 各ITAメニューより情報を抜出してAnsible実行に必要な投入データを作ります。この際、機器一覧のパスワードや代入値管理でSensitive設定をONした変数の具体値がansible-vaultで暗号化されています。
| 投入データはZIP形式で「 :ref:`ansible_pioneer_check_operation_status` 」よりダウンロードが可能です。
| ダウンロードした投入データを所定のディレクトリに解凍することで、Ansibleを直接実行することも可能です。
| 
| 各種データとITAメニューの関係性は以下の通りです。


Ansible-Pioneer投入データ
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table:: Ansible-Pioneer投入データ
   :widths: 20 20 30 20
   :header-rows: 1
   :align: left

   * - メニューグループ     
     - メニュー
     - 項目
     - ディレクトリ解凍時のパス
   * - Ansible-Legacy     
     - Playbook素材集
     - プレイブック素材
     - /child_playbooks
   * - Ansible 共通     
     - テンプレート管理
     - テンプレート素材
     - /template_files
   * - Ansible 共通     
     - ファイル管理
     - ファイル素材
     - /copy_files
   * - Ansible-Pioneer  
     - 代入値管理  
     - ファイル素材 
     - /upload_files 
   * - Ansible 共通     
     - グローバル変数管理
     - 変数名/具体値
     - /host_vars
   * - Ansible-Pioneer     
     - 代入値管理
     - 変数名/具体値(文字列)   
     - /host_vars
   * - Ansible-Pioneer     
     - 代入値管理 
     - 変数名/具体値(ファイル)
     - /host_vars
   * - Ansible-Pioneer     
     - template 管理 
     - テンプレート素材 
     - /host_vars
   * - Ansible-Pioneer     
     - ファイル管理
     - ファイル変数名
     - /host_vars
   * - Ansible共通     
     - 機器一覧  
     - プロトコル 
     - /host_vars
   * - Ansible共通     
     - 機器一覧  
     - ログインユーザ ID 
     - /host_vars
   * - Ansible共通     
     - 機器一覧  
     - | ログインパスワード
       | ※ansible-vault で暗号化 
     - /host_vars
   * - Ansible共通     
     - 機器一覧  
     - ホスト名   
     - /host_vars
   * - Ansible共通     
     - 機器一覧  
     - Pioneer利用情報   
     - /host_vars
   * - Ansible-Pioneer     
     - Movement一覧  
     - 並列実行数  
     - /host_vars
   * - Ansible共通     
     - 機器一覧  
     - ssh 認証鍵ファイル   
     - /ssh_key_files 
   * - Ansible共通     
     - インターフェース情報  
     - オプションパラメータ   
     - /AnsibleExecOption.txt  
   * - Ansible-Pioneer   
     - Movement 一覧  
     - オプションパラメータ   
     - /AnsibleExecOption.txt  
   * - Ansible共通     
     - 機器一覧  
     - ログインユーザ ID   
     - /hosts   
   * - Ansible共通     
     - 機器一覧  
     - | ログインパスワード  
       | ※ansible-vault で暗号化 
     - /hosts   
   * - Ansible共通     
     - 機器一覧  
     - ホスト名   
     - /hosts   
   * - Ansible共通     
     - 機器一覧  
     - IP アドレス   
     - /hosts   
   * - Ansible共通     
     - 機器一覧  
     - インベントリファイル追加オプション     
     - /hosts   
   * - Ansible共通     
     - 機器一覧  
     - Pioneer利用情報     
     - /hosts   
   * - Ansible共通     
     - 機器一覧  
     - | 接続オプション  
       | ※ansible_ssh_extra_args の値     
     - /hosts   
   * - Ansible-Pioneer    
     - Playbook 素材集  
     - プレイブック素材    
     - /playbook.yml  
   * - Ansible-Pioneer  
     - | Movement-Playbook紐付 
       | （Movement-対話種別紐付、Movement-ロール紐付）
     - インクルード順序    
     - /playbook.yml  
   
   
Ansible実行時に作成される結果データ
-----------------------------------
| [投入データ]をansibleで実行した結果を[結果データ]としてZIP形式で保存します。
| [結果データ]はZIP形式で「 :ref:`ansible_pioneer_check_operation_status` 」よりダウンロードが可能です。


Ansible-Pioneer結果データに保存されるファイル一覧
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table:: Ansible-Pioneer結果データに保存されるファイル一覧
   :widths: 20 50 20 20
   :header-rows: 1
   :align: left

   * - ファイル名     
     - 記録内容
     - Ansible Coreの場合
     - Ansible Automation Controllerの場合
   * - result.txt    
     - Ansibleの実行結果を記録
     - 〇
     - 
   * - xxx.pid  
     - | Ansible-playbbokコマンドのプロセスIDを記録するファイル
       | xxx: Ansible-playbbokコマンドのプロセスID
     - 〇
     - 
   * - pioneer.xxx  
     - | PioneerモジュールのプロセスIDを記録するファイル。
       | xxx: PioneerモジュールのプロセスID
     - 〇
     - 〇
   * - error.log
     - | 作業実行時にITAがなにかしらのエラーによりエラーメッセージを出力した場合、または、Ansible-playbbokコマンドがなにかとらのエラーによりエラーメッセージを出力した場合のエラー出力先ファイル
       | 作業実行確認のエラーログに表示に表示される内容
     - 〇
     - 〇
   * - exec.log 
     - | Ansible-playbbokが出力した実行ログを一部加工したログファイル
       | 作業実行確認の実行ログに表示される内容
     - 〇
     - 〇
   * - exec.log.org
     - Ansible-playbbokが出力した実行ログ
     - 〇
     - 〇
   * - Ita_<mode名>_executions_jobtpl_<作業番号>_<グループ番号>
     - | 分割された実行ログファイル
       | ファイル名の命名規則は :ref:`ansible_legacyrole_check_operation_status` の実行ログ表示を参照してください。
     - 
     - 〇
   * - forced.txt
     - 緊急停止をした場合の記録ファイル
     - 〇
     - 
   * - user_files
     - 実行したplaybookでITA独自変数「\__\workflowdir\__\」になにかしらのファイル出力をした場合のファイルが記録されるディレクトリ。
     - 〇
     - 〇


.. _ansible_pioneer_option_parameter_list:

オプションパラメータ一覧
------------------------

.. include:: ../../include/ansible_option_option_parameter_list.rst

Ansible Automation ControllerでITA独自変数を利用する場合の留意事項
--------------------------------------------------------------------------------------------------------------------

.. include:: ../../include/ansible_option_using-ita-proprietary-variables-in-aac.rst


.. _ansible_pioneer_data_resources_deleted_when_executing:

実行時データ削除で削除されるデータリソース 
-------------------------------------------

.. include:: ../../include/ansible_option_data-resources-deleted.rst


..
   {{開発メンバー確認時に不要のためコメントアウト}}
  Ansible利用ガイドラインITA追加ルール
  ------------------------------------
  | ITAを使用して、Ansibleで実行する為のPlaybook作成ガイドラインを記述します。
  | 詳しくは、別資料「利用手順マニュアル_Ansible-driver_別紙_Ansible利用ガイドライン_追加ルール」を参照してください。

  運用操作
  ========
  | 本機能を活用する操作は、クライアントPCのブラウザ画面からのユーザー利用による入力だけでなく、システム運用・保守による操作もあります。用意している運用・保守の操作は次のとおりです。

  メンテナンス
  ------------
  | Ansible-driverのプロセスの開始/停止/再起動に必要なファイルは以下となります。
  | {{#9: こちらの下記対象ファイルとコマンド実行の変更ありますでしょうか。}}

  .. table::
     :align: Left

     +--------------------------------------+-------------------------------+
     | **説明**                             | **対象ファイル名**            |
     +======================================+===============================+
     | LegacyRole実行監視                   | ky_ans\                       |
     |                                      | ible_execute-workflow.service |
     | 未実行作業の実行を行う。             |                               |
     +--------------------------------------+-------------------------------+
     | legacyRole変数自動登録               | ky_legacy_role_va\            |
     |                                      | rsautolistup-workflow.service |
     | アップロ\                            |                               |
     | ードした資材から変数の取出しを行う。 |                               |
     +--------------------------------------+-------------------------------+
     | legacyRole自動登録設定               | ky_legacy_role\               |
     |                                      | _valautostup-workflow.service |
     | 自動登録設定に設定された情報を代入値 |                               |
     | 管理と作業対象メニューに反映を行う。 |                               |
     +--------------------------------------+-------------------------------+
     | Ansible Automation\                  | ky_ansible_tow\               |
     | Controllerデータ同期                 | ermasterSync-workflow.service |
     |                                      |                               |
     | Ansible Automation\                  |                               |
     | Cont\                                |                               |
     | rollerから各種設定情報の取得を行う。 |                               |
     +--------------------------------------+-------------------------------+
   
   | 対象ファイルは「/usr/lib/systemd/system」に格納されています。
   | プロセス起動/停止/再起動の方法は次の通りです。
   | root権限でコマンドを実行してください。
   
   #. | プロセス起動
   
      .. code-block:: none
   
         # systemctl start ky_ansible_execute-workflow.service 
   
   
   #. | プロセス停止
   
      .. code-block:: none
   
         # systemctl stop ky_ansible_execute-workflow.service 
            
   #. | プロセス再起動
   
      .. code-block:: none
   
         # systemctl restart ky_ansible_execute-workflow.service 
   
   | 各対象ファイル名に置き換えて起動/停止/再起動を行ってください。

..
   {{開発メンバー確認時に不要のためコメントアウト}}

   .. _ansible_legacyrole_about_the_maintenance_method:
   メンテナンス方法について　 {{#10: こちらの下記ログレベル設定ファイル・コード変更ありますでしょうか。}}
   -------------------------------------------------------------------------------------------------------
   
   #. | NORMALレベルへの変更
      | 以下のファイルの8行目「DEBUG」を「NORMAL」に書き換えます。
      | ログレベル設定ファイル： <インストールディレクトリ>/ita-root/confs/backyardconfs/ita_env
   
   #. | DEBUGレベルへの変更
      | 以下のファイルの8行目「NORMAL」を「DEBUG」に書き換えます。
      | ログレベル設定ファイル： <インストールディレクトリ>/ita-root/confs/backyardconfs/ita_env
   
   #. | 起動周期の変更
      | 各対象ファイルのExecStartの5番目のパラメータを変更します。（単位:秒）
      | 例外を除き起動周期はデフォルト値の使用をしてください。
   
      .. code-block:: none
   
         ExecStart=/exastro/ita-root/backyards/common/ky_loopcall-php-procedure.sh /usr/local/bin/php /usr/local/bin/php /exastro/ita-root/backyards/ansible_driver/ky_pioneer_varsautolistup-workflow.php /exastro/ita-root/logs/backyardlogs 10 NORMAL > /dev/null 2>&1
   
      | 書き換え後、\ **プロセス再起動(restart)後に有効になります。**
      | ログファイルの出力先： *<インストールディレクトリ>/ita-root/logs/backyardlogs*
   
..
   {{開発メンバー確認時に不要のためコメントアウト}}

   投入データを直接実行する方法
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   ① 投入データの解凍先ディレクトリの作成　
   ***********************************************************************************************************************************
   | 以下の2つのディレクトリを作成し、1.のディレクトリに投入データを解凍します。
   #. | /ベースディレクトリ/ドライバパス/作業番号/in
   #. | /ベースディレクトリ/ドライバパス/作業番号/out
      | ベースディレクトリ　: インターフェース情報=>データリレイストレージパス(Ansible)
      | ドライバパス　:  Legacy-role: legacy/rl　 
      | 作業番号:　作業実行時に自動採番した36桁の文字列
   
   
   | 尚、投入データには、機器一覧にアップロードした秘密鍵ファイルが含まれていません。秘密鍵ファイルを必要といる認証方式の場合、投入データに含まれているインベントリファイル「hosts」を開き、ansible_ssh_private_key_fileに設定されているパスに秘密鍵ファイルをコピーしてください。
   
   | インベントリファイル「hosts」
   
   .. code-block:: none
   
      all:
        children:
          hostgroups:
            hosts:
              target_host_1:
                ansible_ssh_user: keyauth_user
                ansible_ssh_private_key_file: /exastro/data_relay_storage/ansible_driver/legacy/ns/0000000060/in/ssh_key_files/0000000006-keyauth_user_id_rsa
   
       
   ② 投入データを直接実行するコマンド
   ***********************************
   | Ansible-LegacyRole
   
   .. code-block:: none
      
      ansible-playbook (オプション) –i hosts --vault-password-file　パスワードファイル site.yml
   
   .. 
     ② 投入データを直接実行するコマンド
     ***********************************
     | Ansible-Legacy
     | 　　   ansible-playbook (オプション) –i hosts --vault-password-file　パスワードファイル playbook.yml
     | Ansible-Pioneer
     | 　　   ansible-playbook (オプション) –i hosts --vault-password-file　パスワードファイル playbook.yml
     | Ansible-LegacyRole
     | 　　   ansible-playbook (オプション) –i hosts --vault-password-file　パスワードファイル site.yml
     |
   
   .. note:: | パスワードファイル名は任意です。パスワードファイルに設定するパスワードは、ＩＴＡインストール先/ita-root/confs/commonconfs/ansible_vault_accesskey.txtの内容を、rot13、base64の順でデコードした値を使用してください。



